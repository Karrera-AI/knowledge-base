{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to KarreraAI Docs","text":"<p>For more information visit karrera.ai.</p>"},{"location":"#commands","title":"Commands","text":"<p>Create your project doc page in doc/ directory.</p>"},{"location":"#doc-layout","title":"Doc layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages.\n    assets/   # icons, images and files.\n</code></pre>"},{"location":"Front-Doc/","title":"FrontEnd - Doc","text":""},{"location":"Front-Doc/#indice","title":"\ud83d\udccb \u00cdndice","text":"<ol> <li>Vis\u00e3o Geral</li> <li>Arquitetura</li> <li>Funcionalidades Principais</li> <li>Sistemas Especializados</li> <li>Componentes por M\u00f3dulo</li> <li>Hooks Personalizados</li> <li>Internacionaliza\u00e7\u00e3o (i18n)</li> <li>Sistema de Cache</li> <li>Seguran\u00e7a e Criptografia</li> <li>Guia de Desenvolvimento</li> <li>Testes</li> <li>Solu\u00e7\u00e3o de Problemas</li> </ol>"},{"location":"Front-Doc/#visao-geral","title":"\ud83c\udfaf Vis\u00e3o Geral","text":"<p>Karrera AI \u00e9 uma plataforma abrangente de desenvolvimento de carreira que combina princ\u00edpios de neuroci\u00eancia com insights alimentados por IA para ajudar usu\u00e1rios a construir sua jornada profissional.</p>"},{"location":"Front-Doc/#tecnologias-principais","title":"Tecnologias Principais","text":"<ul> <li>React + TypeScript - Framework principal</li> <li>React Query - Gerenciamento de estado do servidor</li> <li>React Router - Navega\u00e7\u00e3o</li> <li>Tailwind CSS - Estiliza\u00e7\u00e3o</li> <li>i18next - Internacionaliza\u00e7\u00e3o</li> <li>Web Crypto API - Criptografia client-side</li> </ul>"},{"location":"Front-Doc/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Node.js 18+</li> <li>npm ou yarn</li> </ul>"},{"location":"Front-Doc/#instalacao-e-execucao","title":"Instala\u00e7\u00e3o e Execu\u00e7\u00e3o","text":"<pre><code># Instala\u00e7\u00e3o\nnpm install\n\n# Desenvolvimento\nnpm run dev\n\n# Build de Produ\u00e7\u00e3o\nnpm run build\n</code></pre>"},{"location":"Front-Doc/#arquitetura","title":"\ud83c\udfd7\ufe0f Arquitetura","text":"<p>A aplica\u00e7\u00e3o segue uma arquitetura modular baseada em componentes com clara separa\u00e7\u00e3o de responsabilidades:</p> <pre><code>client/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 components/          # Componentes UI\n\u2502   \u2502   \u251c\u2500\u2500 auth/           # Autentica\u00e7\u00e3o\n\u2502   \u2502   \u251c\u2500\u2500 memory/         # Sistema de mem\u00f3ria\n\u2502   \u2502   \u251c\u2500\u2500 paths/          # Trilhas de carreira\n\u2502   \u2502   \u251c\u2500\u2500 chat/           # Sistema de chat\n\u2502   \u2502   \u251c\u2500\u2500 profile/        # Perfil do usu\u00e1rio\n\u2502   \u2502   \u251c\u2500\u2500 dashboard/      # Dashboard\n\u2502   \u2502   \u251c\u2500\u2500 projects/       # Projetos\n\u2502   \u2502   \u2514\u2500\u2500 ui/             # Componentes reutiliz\u00e1veis\n\u2502   \u251c\u2500\u2500 hooks/              # Hooks personalizados\n\u2502   \u251c\u2500\u2500 lib/                # Bibliotecas e utilit\u00e1rios\n\u2502   \u2502   \u251c\u2500\u2500 Interfaces/     # Defini\u00e7\u00f5es TypeScript\n\u2502   \u2502   \u251c\u2500\u2500 services/       # Servi\u00e7os de API\n\u2502   \u2502   \u251c\u2500\u2500 Utils/          # Fun\u00e7\u00f5es utilit\u00e1rias\n\u2502   \u2502   \u2514\u2500\u2500 repositories/   # Camada de reposit\u00f3rio\n\u2502   \u251c\u2500\u2500 pages/              # Componentes de p\u00e1gina\n\u2502   \u251c\u2500\u2500 locales/            # Tradu\u00e7\u00f5es (pt/en)\n\u2502   \u251c\u2500\u2500 data/               # Dados est\u00e1ticos\n\u2502   \u2514\u2500\u2500 i18n/               # Configura\u00e7\u00e3o i18n\n</code></pre>"},{"location":"Front-Doc/#principios-arquiteturais","title":"Princ\u00edpios Arquiteturais","text":"<ol> <li>Separa\u00e7\u00e3o de Responsabilidades: L\u00f3gica de neg\u00f3cio separada da apresenta\u00e7\u00e3o</li> <li>Modularidade: Componentes independentes e reutiliz\u00e1veis</li> <li>Type Safety: Cobertura completa de tipos TypeScript</li> <li>Performance: Otimiza\u00e7\u00f5es de renderiza\u00e7\u00e3o e caching inteligente</li> <li>Escalabilidade: Estrutura preparada para crescimento</li> </ol>"},{"location":"Front-Doc/#funcionalidades-principais","title":"\ud83d\ude80 Funcionalidades Principais","text":""},{"location":"Front-Doc/#1-sistema-de-memoria","title":"1. Sistema de Mem\u00f3ria","text":"<p>Sistema de classifica\u00e7\u00e3o de mem\u00f3ria baseado em neuroci\u00eancia, implementando o framework de Kahneman.</p>"},{"location":"Front-Doc/#tipos-de-memoria","title":"Tipos de Mem\u00f3ria","text":"<ul> <li>Sem\u00e2ntica - Conhecimentos gerais, fatos e conceitos</li> <li>Epis\u00f3dica - Experi\u00eancias pessoais com contexto</li> <li>Procedural - Habilidades e padr\u00f5es comportamentais</li> <li>Emocional - Mem\u00f3rias com carga emocional</li> </ul>"},{"location":"Front-Doc/#estados-de-memoria","title":"Estados de Mem\u00f3ria","text":"<ul> <li>Working Memory - Mem\u00f3rias tempor\u00e1rias aguardando classifica\u00e7\u00e3o</li> <li>Long-term Memory - Base de conhecimento permanente</li> <li>Discarded Memory - Mem\u00f3rias movidas para lixeira</li> </ul>"},{"location":"Front-Doc/#framework-de-kahneman","title":"Framework de Kahneman","text":"<ul> <li>Experiencing Self - Captura momento a momento</li> <li>Remembering Self - Constru\u00e7\u00e3o de narrativa usando an\u00e1lise peak-end</li> </ul>"},{"location":"Front-Doc/#componentes-principais","title":"Componentes Principais","text":"<pre><code>import { \n  MemoryClassificationEngine,    // Motor de classifica\u00e7\u00e3o com IA\n  NarrativeBuilder,               // Construtor de narrativas\n  ExperiencingSelfTracker,        // Rastreador de experi\u00eancias\n  LegacyFilesVisualization,       // Gest\u00e3o de arquivos de mem\u00f3ria\n  WorkingMemoryView,              // Visualiza\u00e7\u00e3o de mem\u00f3ria de trabalho\n  LongTermMemoryView,             // Visualiza\u00e7\u00e3o de mem\u00f3ria de longo prazo\n  DiscardedMemoryView             // Visualiza\u00e7\u00e3o de mem\u00f3rias descartadas\n} from '@/components/memory';\n</code></pre>"},{"location":"Front-Doc/#uso-basico","title":"Uso B\u00e1sico","text":"<pre><code>import { MemorySection } from '@/components/memory';\n\nfunction Dashboard() {\n  return &lt;MemorySection /&gt;;\n}\n</code></pre>"},{"location":"Front-Doc/#2-trilhas-de-carreira-paths","title":"2. Trilhas de Carreira (Paths)","text":"<p>Sistema completo de explora\u00e7\u00e3o e gest\u00e3o de trilhas de carreira.</p>"},{"location":"Front-Doc/#funcionalidades","title":"Funcionalidades","text":"<ul> <li>Descoberta de Trilhas: Navegue por trilhas dispon\u00edveis</li> <li>Integra\u00e7\u00e3o WorkDNA: Combina\u00e7\u00e3o baseada em personalidade</li> <li>Acompanhamento de Progresso: Monitore o aprendizado</li> <li>Recursos Comunit\u00e1rios: Conecte-se com outros aprendizes</li> </ul>"},{"location":"Front-Doc/#componentes-principais_1","title":"Componentes Principais","text":"<pre><code>import { \n  PathCard,                  // Card individual de trilha\n  PathDetail,                // Detalhes da trilha\n  PathsList,                 // Lista de trilhas\n  PathsFilters,              // Filtros e busca\n  PathsHeader,               // Cabe\u00e7alho com controles\n  PathsStats,                // Estat\u00edsticas\n  WorkDNARadar,              // Visualiza\u00e7\u00e3o de personalidade\n  PathWorkDNACharacterSheet, // Ficha de personagem\n  PathWorkDNAPeriodicTable   // Tabela peri\u00f3dica\n} from '@/components/paths';\n</code></pre>"},{"location":"Front-Doc/#uso-com-hook","title":"Uso com Hook","text":"<pre><code>import { usePaths } from '@/hooks/use-paths';\n\nfunction PathsPage() {\n  const { \n    paths, \n    filteredPaths, \n    filters, \n    updateFilter,\n    handleViewDetails \n  } = usePaths();\n\n  return (\n    &lt;div&gt;\n      &lt;PathsHeader /&gt;\n      &lt;PathsFilters filters={filters} onFilterChange={updateFilter} /&gt;\n      &lt;PathsList paths={filteredPaths} onViewDetails={handleViewDetails} /&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#3-sistema-de-chat","title":"3. Sistema de Chat","text":"<p>Interface conversacional alimentada por IA.</p>"},{"location":"Front-Doc/#funcionalidades_1","title":"Funcionalidades","text":"<ul> <li>Conversas Baseadas em Templates: Iniciadores de conversa pr\u00e9-definidos</li> <li>Mensagens em Tempo Real: Respostas instant\u00e2neas da IA</li> <li>Tratamento Robusto de Erros: Gest\u00e3o com retry</li> <li>Hist\u00f3rico de Conversas: Sess\u00f5es de chat persistentes</li> </ul>"},{"location":"Front-Doc/#componentes-principais_2","title":"Componentes Principais","text":"<pre><code>import { \n  ChatInterface,    // Interface principal de chat\n  ChatSidebar,      // Lista de conversas\n  ChatMessages,     // Exibi\u00e7\u00e3o de mensagens\n  ChatInput,        // Input com sugest\u00f5es\n  TemplateDialog,   // Sele\u00e7\u00e3o de templates\n  ChatSkeleton,     // Estado de carregamento\n  ErrorMessage      // Mensagens de erro\n} from '@/components/chat';\n</code></pre>"},{"location":"Front-Doc/#uso-com-hook_1","title":"Uso com Hook","text":"<pre><code>import { useChat } from '@/hooks/use-chat';\n\nfunction ChatPage() {\n  const chat = useChat();\n\n  return (\n    &lt;div className=\"flex\"&gt;\n      &lt;ChatSidebar {...chat.sidebarProps} /&gt;\n      &lt;ChatInterface {...chat.interfaceProps} /&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#tratamento-de-erros","title":"Tratamento de Erros","text":"<ul> <li>Design Consistente: Mensagens de erro mant\u00eam o mesmo estilo</li> <li>Sem Detalhes T\u00e9cnicos: Usu\u00e1rios n\u00e3o veem erros internos da API</li> <li>Funcionalidade de Retry: Bot\u00e3o \"Tentar Novamente\"</li> <li>Hist\u00f3rico Limpo: Mensagens de erro n\u00e3o s\u00e3o salvas</li> </ul>"},{"location":"Front-Doc/#4-perfil-do-usuario","title":"4. Perfil do Usu\u00e1rio","text":"<p>Gest\u00e3o abrangente do perfil do usu\u00e1rio.</p>"},{"location":"Front-Doc/#funcionalidades_2","title":"Funcionalidades","text":"<ul> <li>An\u00e1lise WorkDNA: Avalia\u00e7\u00e3o de personalidade e habilidades</li> <li>Sugest\u00f5es de Carreira: Recomenda\u00e7\u00f5es alimentadas por IA</li> <li>Gest\u00e3o de Personas: M\u00faltiplas personas profissionais</li> <li>Visualiza\u00e7\u00e3o de Progresso: Acompanhamento de desenvolvimento</li> </ul>"},{"location":"Front-Doc/#componentes-principais_3","title":"Componentes Principais","text":"<pre><code>import { \n  ProfileHeader,           // Vis\u00e3o geral do perfil\n  WorkDNAVisualization,    // Visualiza\u00e7\u00e3o de personalidade\n  CareerPathSuggestions,   // Recomenda\u00e7\u00f5es de IA\n  PersonaManagement        // Cria\u00e7\u00e3o e edi\u00e7\u00e3o de personas\n} from '@/components/profile';\n</code></pre>"},{"location":"Front-Doc/#uso-com-hook_2","title":"Uso com Hook","text":"<pre><code>import { useProfile } from '@/hooks/use-profile';\n\nfunction ProfilePage() {\n  const { user, workDNA, isLoading } = useProfile();\n\n  if (isLoading) return &lt;LoadingState /&gt;;\n\n  return (\n    &lt;div&gt;\n      &lt;ProfileHeader user={user} /&gt;\n      &lt;WorkDNAVisualization workDNA={workDNA} /&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#sistemas-especializados","title":"\ud83d\udd27 Sistemas Especializados","text":""},{"location":"Front-Doc/#sistema-de-fila-de-validacao-de-memoria","title":"Sistema de Fila de Valida\u00e7\u00e3o de Mem\u00f3ria","text":"<p>Sistema completo de processamento em background para valida\u00e7\u00e3o de mem\u00f3rias, permitindo que usu\u00e1rios continuem usando a aplica\u00e7\u00e3o sem esperar uploads completarem.</p>"},{"location":"Front-Doc/#caracteristicas-principais","title":"Caracter\u00edsticas Principais","text":"<ul> <li>\u2705 Processamento N\u00e3o Bloqueante: Usu\u00e1rio pode navegar imediatamente</li> <li>\ud83d\udd04 Retry Autom\u00e1tico: 3 tentativas autom\u00e1ticas com delay crescente (2s, 4s, 6s)</li> <li>\u26a0\ufe0f Tratamento Robusto de Erros: Captura, exibe e permite retry manual</li> <li>\ud83d\udcbe Persist\u00eancia: Fila salva em localStorage, sobrevive a reloads</li> <li>\ud83d\udcca Monitoramento Visual: Interface em tempo real para acompanhamento</li> <li>\ud83c\udfaf Zero Bloqueio: Usu\u00e1rio pode continuar trabalhando imediatamente</li> </ul>"},{"location":"Front-Doc/#arquitetura_1","title":"Arquitetura","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 USU\u00c1RIO CLICA \"CONFIRMAR\"                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                       \u2502\n                       \u25bc\n         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u2502   addToQueue()              \u2502\n         \u2502   [N\u00e3o Bloqueante!]         \u2502\n         \u2502   - Retorna ID              \u2502\n         \u2502   - Salva localStorage      \u2502\n         \u2502   - Notifica listeners      \u2502\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                    \u2502\n        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n        \u2502                       \u2502\n        \u25bc                       \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   UI LIVRE   \u2502       \u2502   BACKGROUND     \u2502\n\u2502              \u2502       \u2502   PROCESSING     \u2502\n\u2502 - Toast OK   \u2502       \u2502                  \u2502\n\u2502 - Navega\u00e7\u00e3o  \u2502       \u2502  processQueue()  \u2502\n\u2502 - Monitor ON \u2502       \u2502   \u251c\u2500 Item 1      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2502   \u251c\u2500 Item 2      \u2502\n                       \u2502   \u2514\u2500 Item 3      \u2502\n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"Front-Doc/#componentes","title":"Componentes","text":"<p>1. Servi\u00e7o Principal <pre><code>// client/src/lib/services/memory-validation-queue.service.ts\nimport { MemoryValidationQueueService } from '@/lib/services/memory-validation-queue.service';\n\nconst queueService = MemoryValidationQueueService.getInstance();\n\n// M\u00e9todos principais:\nqueueService.addToQueue(memoryId, approvedItems, rejectedItems, memoryName);\nqueueService.getStats();\nqueueService.retryFailedItem(itemId);\nqueueService.clearCompleted();\n</code></pre></p> <p>2. Hook React <pre><code>// client/src/hooks/use-validation-queue.ts\nimport { useValidationQueue } from '@/hooks/use-validation-queue';\n\nfunction MyComponent() {\n  const {\n    stats,           // Estat\u00edsticas da fila\n    items,           // Todos os itens\n    activeItems,     // Itens ativos\n    failedItems,     // Itens falhados\n    isProcessing,    // Se est\u00e1 processando\n    addToQueue,      // Adicionar \u00e0 fila\n    retryFailedItem, // Tentar novamente\n    clearCompleted   // Limpar conclu\u00eddos\n  } = useValidationQueue();\n}\n</code></pre></p> <p>3. Monitor Visual <pre><code>// client/src/components/memory/validation-queue-monitor.tsx\nimport { ValidationQueueMonitor } from '@/components/memory/validation-queue-monitor';\n\nfunction WorkingMemoryView() {\n  return (\n    &lt;&gt;\n      &lt;ValidationQueueMonitor /&gt;\n      {/* Resto do componente */}\n    &lt;/&gt;\n  );\n}\n</code></pre></p>"},{"location":"Front-Doc/#uso-pratico","title":"Uso Pr\u00e1tico","text":"<pre><code>import { useValidationQueue } from '@/hooks/use-validation-queue';\nimport { ValidationQueueMonitor } from '@/components/memory/validation-queue-monitor';\n\nfunction WorkingMemoryView() {\n  const { addToQueue } = useValidationQueue();\n\n  const handleSubmit = async () =&gt; {\n    // Adiciona \u00e0 fila (n\u00e3o espera!)\n    const queueItemId = addToQueue(\n      memoryId,\n      approvedItems,\n      rejectedItems,\n      memoryName\n    );\n\n    // Notifica usu\u00e1rio\n    toast({\n      title: 'Valida\u00e7\u00e3o adicionada \u00e0 fila',\n      description: 'Voc\u00ea pode continuar navegando.'\n    });\n\n    // Navega IMEDIATAMENTE\n    navigate('/next-page');\n  };\n\n  return (\n    &lt;&gt;\n      &lt;ValidationQueueMonitor /&gt;\n      {/* Rest of component */}\n    &lt;/&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#estados-dos-itens","title":"Estados dos Itens","text":"<ul> <li><code>pending</code> \u2192 Aguardando processamento</li> <li><code>processing</code> \u2192 Em processamento</li> <li><code>retrying</code> \u2192 Tentando novamente</li> <li><code>completed</code> \u2192 Conclu\u00eddo com sucesso</li> <li><code>failed</code> \u2192 Falhou ap\u00f3s 3 tentativas</li> </ul>"},{"location":"Front-Doc/#configuracao","title":"Configura\u00e7\u00e3o","text":"<pre><code>// Par\u00e2metros ajust\u00e1veis no servi\u00e7o\nprivate readonly MAX_RETRIES = 3;           // Tentativas m\u00e1ximas\nprivate readonly RETRY_DELAY = 2000;        // Delay base: 2s\nprivate readonly PROCESSING_DELAY = 500;    // Entre itens: 0.5s\n</code></pre>"},{"location":"Front-Doc/#persistencia-e-recuperacao","title":"Persist\u00eancia e Recupera\u00e7\u00e3o","text":"<ul> <li>Salvamento: Autom\u00e1tico ap\u00f3s cada mudan\u00e7a</li> <li>Carregamento: Autom\u00e1tico na inicializa\u00e7\u00e3o</li> <li>Recupera\u00e7\u00e3o: Continua processamento ap\u00f3s reload</li> <li>Comportamento p\u00f3s-Reload:</li> <li>\u2705 Itens <code>pending</code> \u2192 Continuam na fila</li> <li>\ud83d\udd04 Itens <code>processing</code> \u2192 Reset para <code>pending</code></li> <li>\u2705 Itens <code>completed</code> \u2192 Permanecem para visualiza\u00e7\u00e3o</li> <li>\u274c Itens <code>failed</code> \u2192 Mantidos com erros</li> <li>\ud83d\udd04 Itens <code>retrying</code> \u2192 Reset para <code>pending</code></li> </ul>"},{"location":"Front-Doc/#monitoramento-e-debug","title":"Monitoramento e Debug","text":"<pre><code>// No Console do DevTools\nconst queue = MemoryValidationQueueService.getInstance();\n\n// Ver estat\u00edsticas\nqueue.getStats();\n\n// Ver itens ativos\nqueue.getActiveItems();\n\n// Ver itens falhados\nqueue.getFailedItems();\n\n// Limpar localStorage\nlocalStorage.removeItem('memory-validation-queue');\n</code></pre>"},{"location":"Front-Doc/#documentacao-adicional","title":"Documenta\u00e7\u00e3o Adicional","text":"<ul> <li>README-VALIDATION-QUEUE.md - Documenta\u00e7\u00e3o completa da arquitetura</li> <li>MANUAL-TESTING-GUIDE.md - Guia passo a passo de testes manuais</li> <li>IMPLEMENTATION-VALIDATION-QUEUE.md - Resumo da implementa\u00e7\u00e3o</li> </ul>"},{"location":"Front-Doc/#componentes-por-modulo","title":"\ud83d\udce6 Componentes por M\u00f3dulo","text":""},{"location":"Front-Doc/#modulo-de-autenticacao","title":"M\u00f3dulo de Autentica\u00e7\u00e3o","text":"<pre><code>// client/src/components/auth/\nimport {\n  RegistrationWizard,     // Wizard de registro\n  LoginForm,              // Formul\u00e1rio de login\n  AuthGuard               // Prote\u00e7\u00e3o de rotas\n} from '@/components/auth';\n</code></pre>"},{"location":"Front-Doc/#modulo-de-dashboard","title":"M\u00f3dulo de Dashboard","text":"<pre><code>// client/src/components/dashboard/\nimport {\n  TopNav,                 // Navega\u00e7\u00e3o superior\n  Sidebar,                // Barra lateral\n  NewDiscussionView,      // Nova discuss\u00e3o\n  TopicDetailView         // Detalhes do t\u00f3pico\n} from '@/components/dashboard';\n</code></pre>"},{"location":"Front-Doc/#modulo-de-projetos","title":"M\u00f3dulo de Projetos","text":"<pre><code>// client/src/components/projects/\nimport {\n  ProjectCard,            // Card de projeto\n  ProjectForm,            // Formul\u00e1rio de projeto\n  ProjectList             // Lista de projetos\n} from '@/components/projects';\n</code></pre>"},{"location":"Front-Doc/#componentes-ui-reutilizaveis","title":"Componentes UI Reutiliz\u00e1veis","text":"<pre><code>// client/src/components/ui/\nimport {\n  Button,                 // Bot\u00e3o\n  Card,                   // Card\n  Dialog,                 // Di\u00e1logo\n  Input,                  // Input\n  Select,                 // Select\n  Tabs,                   // Tabs\n  Toast,                  // Toast\n  Badge,                  // Badge\n  Avatar,                 // Avatar\n  Skeleton,               // Skeleton loading\n  // ... e 40+ componentes mais\n} from '@/components/ui';\n</code></pre>"},{"location":"Front-Doc/#hooks-personalizados","title":"\ud83c\udfa3 Hooks Personalizados","text":""},{"location":"Front-Doc/#hook-de-autenticacao","title":"Hook de Autentica\u00e7\u00e3o","text":"<pre><code>import { useAuth } from '@/hooks/use-auth';\n\nfunction MyComponent() {\n  const {\n    user,              // Dados do usu\u00e1rio\n    isAuthenticated,   // Status de autentica\u00e7\u00e3o\n    isLoading,         // Estado de carregamento\n    login,             // Fun\u00e7\u00e3o de login\n    logout,            // Fun\u00e7\u00e3o de logout\n    refreshUser        // Atualizar dados do usu\u00e1rio\n  } = useAuth();\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-perfil","title":"Hook de Perfil","text":"<pre><code>import { useProfile } from '@/hooks/use-profile';\n\nfunction ProfileComponent() {\n  const {\n    user,              // Dados do usu\u00e1rio\n    workDNA,           // Dados WorkDNA\n    isLoading,         // Estado de carregamento\n    error,             // Erro se houver\n    updateProfile,     // Atualizar perfil\n    refreshProfile     // Recarregar perfil\n  } = useProfile();\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-workdna","title":"Hook de WorkDNA","text":"<pre><code>import { useWorkDNA } from '@/hooks/use-workdna';\n\nfunction WorkDNAComponent() {\n  const {\n    workDNA,           // Dados WorkDNA\n    isLoading,         // Estado de carregamento\n    updateWorkDNA,     // Atualizar WorkDNA\n    getMatchScore      // Calcular score de match\n  } = useWorkDNA();\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-chat","title":"Hook de Chat","text":"<pre><code>import { useChat } from '@/hooks/use-chat';\n\nfunction ChatComponent() {\n  const {\n    chatState,         // Estado do chat\n    conversations,     // Lista de conversas\n    templates,         // Templates dispon\u00edveis\n    sendMessage,       // Enviar mensagem\n    createConversation,// Criar conversa\n    retryLastMessage   // Tentar \u00faltima mensagem novamente\n  } = useChat();\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-paths","title":"Hook de Paths","text":"<pre><code>import { usePaths } from '@/hooks/use-paths';\n\nfunction PathsComponent() {\n  const {\n    paths,             // Todas as trilhas\n    filteredPaths,     // Trilhas filtradas\n    currentPath,       // Trilha atual\n    filters,           // Filtros ativos\n    updateFilter,      // Atualizar filtro\n    clearFilters,      // Limpar filtros\n    handleViewDetails  // Ver detalhes\n  } = usePaths();\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-memoria","title":"Hook de Mem\u00f3ria","text":"<pre><code>import { useMemoryTabs } from '@/hooks/use-memory-tabs';\n\nfunction MemoryComponent() {\n  const {\n    activeTab,         // Tab ativa\n    setActiveTab,      // Mudar tab\n    memories,          // Mem\u00f3rias\n    isLoading          // Estado de carregamento\n  } = useMemoryTabs();\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-fila-de-validacao","title":"Hook de Fila de Valida\u00e7\u00e3o","text":"<pre><code>import { useValidationQueue } from '@/hooks/use-validation-queue';\n\nfunction ValidationComponent() {\n  const {\n    stats,             // Estat\u00edsticas da fila\n    items,             // Todos os itens\n    activeItems,       // Itens ativos\n    failedItems,       // Itens falhados\n    addToQueue,        // Adicionar \u00e0 fila\n    retryFailedItem,   // Tentar novamente\n    clearCompleted     // Limpar conclu\u00eddos\n  } = useValidationQueue();\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-toast","title":"Hook de Toast","text":"<pre><code>import { useToast } from '@/hooks/use-toast';\n\nfunction MyComponent() {\n  const { toast } = useToast();\n\n  const showSuccess = () =&gt; {\n    toast({\n      title: 'Sucesso!',\n      description: 'Opera\u00e7\u00e3o conclu\u00edda.',\n      variant: 'success'\n    });\n  };\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-mobile","title":"Hook de Mobile","text":"<pre><code>import { useMobile } from '@/hooks/use-mobile';\n\nfunction ResponsiveComponent() {\n  const isMobile = useMobile();\n\n  return isMobile ? &lt;MobileView /&gt; : &lt;DesktopView /&gt;;\n}\n</code></pre>"},{"location":"Front-Doc/#hook-de-sugestoes-de-carreira","title":"Hook de Sugest\u00f5es de Carreira","text":"<pre><code>import { useCareerSuggestions } from '@/hooks/use-career-suggestions';\n\nfunction CareerComponent() {\n  const {\n    suggestions,       // Sugest\u00f5es de carreira\n    isLoading,         // Estado de carregamento\n    refreshSuggestions // Atualizar sugest\u00f5es\n  } = useCareerSuggestions();\n}\n</code></pre>"},{"location":"Front-Doc/#internacionalizacao-i18n","title":"\ud83c\udf0d Internacionaliza\u00e7\u00e3o (i18n)","text":"<p>Sistema completo de multi-idiomas usando react-i18next.</p>"},{"location":"Front-Doc/#idiomas-suportados","title":"Idiomas Suportados","text":"<ul> <li>Portugu\u00eas (pt) - Portugu\u00eas Brasileiro</li> <li>English (en) - Idioma padr\u00e3o quando n\u00e3o suportado</li> </ul>"},{"location":"Front-Doc/#prioridade-de-deteccao","title":"Prioridade de Detec\u00e7\u00e3o","text":"<ol> <li>Sele\u00e7\u00e3o Manual - localStorage/sessionStorage (quando usu\u00e1rio escolhe)</li> <li>Navegador - Detec\u00e7\u00e3o autom\u00e1tica do idioma do navegador</li> <li>Fallback - Ingl\u00eas quando idioma n\u00e3o \u00e9 suportado</li> </ol>"},{"location":"Front-Doc/#estrutura-de-arquivos","title":"Estrutura de Arquivos","text":"<pre><code>src/\n\u251c\u2500\u2500 i18n/\n\u2502   \u2514\u2500\u2500 index.ts              # Configura\u00e7\u00e3o principal do i18next\n\u251c\u2500\u2500 locales/\n\u2502   \u251c\u2500\u2500 pt/                   # Tradu\u00e7\u00f5es em portugu\u00eas\n\u2502   \u2502   \u251c\u2500\u2500 common.json       # Textos comuns\n\u2502   \u2502   \u251c\u2500\u2500 dashboard.json    # Dashboard\n\u2502   \u2502   \u251c\u2500\u2500 memory.json       # Mem\u00f3ria\n\u2502   \u2502   \u251c\u2500\u2500 profile.json      # Perfil\n\u2502   \u2502   \u2514\u2500\u2500 projects.json     # Projetos\n\u2502   \u2514\u2500\u2500 en/                   # Tradu\u00e7\u00f5es em ingl\u00eas\n\u2502       \u251c\u2500\u2500 common.json\n\u2502       \u251c\u2500\u2500 dashboard.json\n\u2502       \u251c\u2500\u2500 memory.json\n\u2502       \u251c\u2500\u2500 profile.json\n\u2502       \u2514\u2500\u2500 projects.json\n\u2514\u2500\u2500 hooks/\n    \u2514\u2500\u2500 use-i18n.ts           # Hooks personalizados\n</code></pre>"},{"location":"Front-Doc/#uso-basico_1","title":"Uso B\u00e1sico","text":"<pre><code>import { useI18n } from '@/hooks/use-i18n';\n\nfunction MyComponent() {\n  const { t, changeLanguage, language } = useI18n();\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;{t('common.title')}&lt;/h1&gt;\n      &lt;p&gt;Idioma atual: {language}&lt;/p&gt;\n      &lt;button onClick={() =&gt; changeLanguage('en')}&gt;English&lt;/button&gt;\n      &lt;button onClick={() =&gt; changeLanguage('pt')}&gt;Portugu\u00eas&lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#hooks-especificos-por-namespace","title":"Hooks Espec\u00edficos por Namespace","text":"<pre><code>import { \n  useCommonI18n,\n  useDashboardI18n,\n  useMemoryI18n,\n  useProfileI18n,\n  useProjectsI18n\n} from '@/hooks/use-i18n';\n\nfunction MyComponent() {\n  const { t: tCommon } = useCommonI18n();\n  const { t: tDashboard } = useDashboardI18n();\n\n  return (\n    &lt;div&gt;\n      &lt;button&gt;{tCommon('save')}&lt;/button&gt;\n      &lt;h1&gt;{tDashboard('title')}&lt;/h1&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#interpolacao-de-variaveis","title":"Interpola\u00e7\u00e3o de Vari\u00e1veis","text":"<pre><code>// No arquivo de tradu\u00e7\u00e3o\n{\n  \"welcome\": \"Bem-vindo, {{name}}!\",\n  \"itemCount\": \"Voc\u00ea tem {{count}} item\",\n  \"itemCount_plural\": \"Voc\u00ea tem {{count}} itens\"\n}\n</code></pre> <pre><code>// No componente\nfunction Welcome({ userName, itemCount }) {\n  const { t } = useCommonI18n();\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;{t('welcome', { name: userName })}&lt;/h1&gt;\n      &lt;p&gt;{t('itemCount', { count: itemCount })}&lt;/p&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#seletor-de-idioma","title":"Seletor de Idioma","text":"<pre><code>import LanguageSelector from '@/components/ui/language-selector';\n\nfunction Header() {\n  return (\n    &lt;header&gt;\n      {/* Seletor dropdown */}\n      &lt;LanguageSelector variant=\"select\" showLabel /&gt;\n\n      {/* Bot\u00f5es */}\n      &lt;LanguageSelector variant=\"button\" size=\"sm\" /&gt;\n    &lt;/header&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#namespaces-disponiveis","title":"Namespaces Dispon\u00edveis","text":""},{"location":"Front-Doc/#common","title":"common","text":"<p>Textos usados em toda a aplica\u00e7\u00e3o: - <code>navigation.*</code> - Menus e navega\u00e7\u00e3o - <code>common.*</code> - A\u00e7\u00f5es comuns (salvar, cancelar, etc.) - <code>forms.*</code> - Formul\u00e1rios - <code>messages.*</code> - Mensagens de feedback</p>"},{"location":"Front-Doc/#dashboard","title":"dashboard","text":"<p>Textos espec\u00edficos do dashboard: - <code>sections.*</code> - Se\u00e7\u00f5es do dashboard - <code>stats.*</code> - Estat\u00edsticas</p>"},{"location":"Front-Doc/#memory","title":"memory","text":"<p>Sistema de mem\u00f3ria: - <code>types.*</code> - Tipos de mem\u00f3ria - <code>tabs.*</code> - Tabs de navega\u00e7\u00e3o - <code>classification.*</code> - Motor de classifica\u00e7\u00e3o - <code>narrative.*</code> - Construtor de narrativa</p>"},{"location":"Front-Doc/#profile","title":"profile","text":"<p>Perfil do usu\u00e1rio: - <code>workdna.*</code> - WorkDNA - <code>skills.*</code> - Habilidades - <code>persona.*</code> - Gest\u00e3o de personas</p>"},{"location":"Front-Doc/#projects","title":"projects","text":"<p>Gest\u00e3o de projetos: - <code>status.*</code> - Status dos projetos - <code>form.*</code> - Formul\u00e1rios - <code>actions.*</code> - A\u00e7\u00f5es dispon\u00edveis</p>"},{"location":"Front-Doc/#configuracao_1","title":"Configura\u00e7\u00e3o","text":"<pre><code>// src/i18n/index.ts\ni18n.init({\n  resources,\n  fallbackLng: 'pt',      // Idioma padr\u00e3o\n  defaultNS: 'common',    // Namespace padr\u00e3o\n  ns: ['common', 'dashboard', 'memory', 'profile', 'projects'],\n\n  detection: {\n    order: ['localStorage', 'navigator', 'htmlTag'],\n    caches: ['localStorage'],\n  },\n});\n</code></pre>"},{"location":"Front-Doc/#comportamento-de-prioridade-de-idioma","title":"Comportamento de Prioridade de Idioma","text":"<p>\u26a0\ufe0f Importante: Uma vez que o usu\u00e1rio selecione manualmente um idioma, essa escolha ter\u00e1 sempre prioridade sobre a detec\u00e7\u00e3o autom\u00e1tica do navegador.</p> <pre><code>// Cen\u00e1rio 1: Primeira visita - navegador em portugu\u00eas\n// Resultado: Interface em portugu\u00eas\n\n// Cen\u00e1rio 2: Usu\u00e1rio seleciona manualmente ingl\u00eas  \n// Resultado: Interface muda para ingl\u00eas E salva prefer\u00eancia\n\n// Cen\u00e1rio 3: Pr\u00f3xima visita do mesmo usu\u00e1rio\n// Resultado: Interface em ingl\u00eas (ignora navegador em portugu\u00eas)\n\n// Cen\u00e1rio 4: Navegador em franc\u00eas (n\u00e3o suportado)\n// Resultado: Interface em ingl\u00eas (fallback)\n</code></pre>"},{"location":"Front-Doc/#melhores-praticas","title":"Melhores Pr\u00e1ticas","text":"<ol> <li>Use namespaces espec\u00edficos quando poss\u00edvel</li> <li>Organize chaves hierarquicamente nos arquivos JSON</li> <li>Mantenha consist\u00eancia entre idiomas</li> <li>Use interpola\u00e7\u00e3o para conte\u00fado din\u00e2mico</li> <li>Teste em ambos os idiomas antes de deployar</li> <li>Evite traduzir nomes pr\u00f3prios e marcas</li> <li>Use fallbacks para textos que podem n\u00e3o existir</li> </ol>"},{"location":"Front-Doc/#sistema-de-cache","title":"\ud83d\udcbe Sistema de Cache","text":""},{"location":"Front-Doc/#cache-do-hook-useauth","title":"Cache do Hook useAuth","text":"<p>O hook <code>useAuth</code> foi implementado com um sistema inteligente de cache para evitar requisi\u00e7\u00f5es repetidas \u00e0 API, melhorando significativamente a performance da aplica\u00e7\u00e3o.</p>"},{"location":"Front-Doc/#como-funciona","title":"Como Funciona","text":"<p>1. Cache de Dados - Dura\u00e7\u00e3o: 5 minutos (configur\u00e1vel via <code>CACHE_DURATION</code>) - Armazenamento: LocalStorage usando a classe <code>StorageData</code> - Chave: <code>user_cache</code></p> <p>2. Estrutura do Cache <pre><code>interface CachedData {\n  user: User;           // Dados do usu\u00e1rio da API\n  profile: UserData;    // Dados do perfil Solid\n  timestamp: number;    // Timestamp de cria\u00e7\u00e3o\n  expiresAt: number;    // Timestamp de expira\u00e7\u00e3o\n}\n</code></pre></p> <p>3. Fluxo de Opera\u00e7\u00e3o</p> <p>Primeira Execu\u00e7\u00e3o: 1. Verifica se h\u00e1 dados em cache 2. Se n\u00e3o houver, faz as requisi\u00e7\u00f5es necess\u00e1rias 3. Salva dados no cache ap\u00f3s sucesso 4. Define estado da aplica\u00e7\u00e3o</p> <p>Execu\u00e7\u00f5es Subsequentes: 1. Verifica se o cache \u00e9 v\u00e1lido 2. Se v\u00e1lido, usa dados em cache (sem requisi\u00e7\u00f5es) 3. Se expirado, remove cache e busca novos dados</p> <p>4. Fun\u00e7\u00f5es de Cache</p> <pre><code>// Carregar do cache\nloadFromCache()         // Carrega dados do cache\n                       // Verifica validade temporal\n                       // Remove cache expirado automaticamente\n\n// Salvar no cache\nsaveToCache(user, profile)  // Salva dados no cache\n                           // Define timestamps de cria\u00e7\u00e3o e expira\u00e7\u00e3o\n                           // Trata erros graciosamente\n\n// Limpar cache\nclearCache()            // Remove dados do cache\n                       // Usado em logout e erros\n\n// Verificar validade\nisCacheValid(timestamp, expiresAt)  // Verifica se cache ainda \u00e9 v\u00e1lido\n                                   // Considera expira\u00e7\u00e3o e dura\u00e7\u00e3o m\u00e1xima\n</code></pre> <p>5. Pontos de Integra\u00e7\u00e3o</p> <pre><code>// initializeAuth() - Tenta carregar do cache primeiro\n// refreshUser() - Atualiza cache ap\u00f3s refresh bem-sucedido\n// logout() - Limpa cache no logout\n// forceRefresh() - For\u00e7a atualiza\u00e7\u00e3o ignorando cache\n</code></pre>"},{"location":"Front-Doc/#beneficios","title":"Benef\u00edcios","text":"<ol> <li>Performance: Reduz requisi\u00e7\u00f5es desnecess\u00e1rias</li> <li>UX: Carregamento mais r\u00e1pido na navega\u00e7\u00e3o</li> <li>Efici\u00eancia: Menor uso de recursos da API</li> <li>Confiabilidade: Fallback para requisi\u00e7\u00f5es quando necess\u00e1rio</li> </ol>"},{"location":"Front-Doc/#configuracao_2","title":"Configura\u00e7\u00e3o","text":"<p>Para alterar a dura\u00e7\u00e3o do cache, modifique a constante:</p> <pre><code>const CACHE_DURATION = 10 * 60 * 1000; // 10 minutos\n</code></pre>"},{"location":"Front-Doc/#debug","title":"Debug","text":"<p>O sistema inclui logs para facilitar debug: - <code>'Dados salvos no cache com sucesso'</code> - <code>'Dados carregados do cache'</code> - <code>'Cache expirado, removido'</code> - <code>'Cache limpo com sucesso'</code></p>"},{"location":"Front-Doc/#consideracoes","title":"Considera\u00e7\u00f5es","text":"<ul> <li>Cache \u00e9 automaticamente limpo em caso de erros</li> <li>Dados sempre atualizados ap\u00f3s opera\u00e7\u00f5es de refresh</li> <li>Sistema resiliente a falhas de armazenamento</li> <li>Cache invalidado no logout por seguran\u00e7a</li> </ul>"},{"location":"Front-Doc/#seguranca-e-criptografia","title":"\ud83d\udd10 Seguran\u00e7a e Criptografia","text":""},{"location":"Front-Doc/#sistema-de-criptografia-para-localstorage","title":"Sistema de Criptografia para localStorage","text":"<p>Sistema que implementa criptografia autom\u00e1tica para dados sens\u00edveis armazenados em localStorage, garantindo que informa\u00e7\u00f5es como webId, email, nome e outros dados de autentica\u00e7\u00e3o sejam protegidos.</p>"},{"location":"Front-Doc/#arquivos-principais","title":"Arquivos Principais","text":"<p>1. <code>crypto.ts</code> - CryptoUtils: Classe singleton que gerencia criptografia - Algoritmo: AES-GCM com chave de 256 bits - Chave: Gerada automaticamente e armazenada em localStorage - IV: Vetor de inicializa\u00e7\u00e3o aleat\u00f3rio para cada opera\u00e7\u00e3o</p> <p>2. <code>Storage.ts</code> (modificado) - StorageData: Classe que agora usa criptografia automaticamente - Compatibilidade: Suporta dados n\u00e3o criptografados existentes - Transparente: C\u00f3digo existente n\u00e3o precisa ser modificado</p>"},{"location":"Front-Doc/#como-funciona_1","title":"Como Funciona","text":"<p>1. Criptografia Autom\u00e1tica</p> <pre><code>// Ao salvar dados\nawait StorageData.write('webId', 'https://user.com/profile#me');\n// Dados s\u00e3o automaticamente criptografados antes de serem salvos\n\n// Ao ler dados\nconst webId = await StorageData.read&lt;string&gt;('webId');\n// Dados s\u00e3o automaticamente descriptografados ao serem lidos\n</code></pre> <p>2. Detec\u00e7\u00e3o de Dados Criptografados</p> <p>O sistema detecta automaticamente se os dados est\u00e3o criptografados: - Se criptografados: descriptografa automaticamente - Se n\u00e3o criptografados: usa dados como est\u00e3o (compatibilidade)</p> <p>3. Gest\u00e3o de Chaves</p> <ul> <li>Chave de criptografia \u00e9 gerada automaticamente na primeira execu\u00e7\u00e3o</li> <li>Chave \u00e9 armazenada em localStorage com o nome <code>karrera-crypto-key</code></li> <li>Chave \u00e9 automaticamente limpa durante logout</li> </ul>"},{"location":"Front-Doc/#seguranca","title":"Seguran\u00e7a","text":"<p>Pontos Fortes: - AES-GCM: Algoritmo de criptografia sim\u00e9trica robusto - IV Aleat\u00f3rio: Cada opera\u00e7\u00e3o usa um vetor de inicializa\u00e7\u00e3o \u00fanico - Chave \u00danica: Cada instala\u00e7\u00e3o do app tem sua pr\u00f3pria chave - Limpeza Autom\u00e1tica: Chave \u00e9 removida durante logout</p> <p>Limita\u00e7\u00f5es: - Client-side: Criptografia acontece no lado do cliente - Chave Local: Chave \u00e9 armazenada no mesmo dispositivo - JavaScript: Vulner\u00e1vel a ataques de engenharia reversa</p>"},{"location":"Front-Doc/#compatibilidade","title":"Compatibilidade","text":"<p>Dados Existentes:</p> <p>O sistema \u00e9 totalmente compat\u00edvel com dados n\u00e3o criptografados existentes: 1. Dados antigos s\u00e3o lidos normalmente 2. Quando reescritos, s\u00e3o automaticamente criptografados 3. N\u00e3o \u00e9 necess\u00e1ria migra\u00e7\u00e3o manual</p> <p>Navegadores: - Suporte: Todos os navegadores modernos com Web Crypto API - Fallback: Se criptografia n\u00e3o estiver dispon\u00edvel, usa dados n\u00e3o criptografados - Detec\u00e7\u00e3o: <code>cryptoUtils.isAvailable()</code> verifica disponibilidade</p>"},{"location":"Front-Doc/#uso","title":"Uso","text":"<p>Para Desenvolvedores:</p> <pre><code>import { StorageData } from '@/lib/Data/Storage';\n\n// Salvar dados (criptografia autom\u00e1tica)\nawait StorageData.write('sensitiveData', { key: 'value' });\n\n// Ler dados (descriptografia autom\u00e1tica)\nconst data = await StorageData.read&lt;{key: string}&gt;('sensitiveData');\n</code></pre>"},{"location":"Front-Doc/#dados-criptografados","title":"Dados Criptografados","text":"<p>Chaves que S\u00c3O Criptografadas: - <code>webId</code>: Identificador do usu\u00e1rio - <code>email</code>: Email do usu\u00e1rio - <code>name</code>: Nome do usu\u00e1rio - <code>avatar</code>: URL do avatar - <code>userId</code>: ID interno do usu\u00e1rio - <code>isFirstLogin</code>: Flag de primeiro login - <code>user_cache</code>: Cache de dados do usu\u00e1rio</p> <p>Chaves que N\u00c3O S\u00c3O Criptografadas: - <code>session-id</code>: ID de sess\u00e3o (usado para autentica\u00e7\u00e3o) - <code>callbackUrl</code>: URL de callback (tempor\u00e1rio)</p>"},{"location":"Front-Doc/#logout-e-limpeza","title":"Logout e Limpeza","text":"<p>Durante o logout, o sistema: 1. Remove todos os dados de autentica\u00e7\u00e3o 2. Limpa chave de criptografia 3. Remove dados de sessionStorage 4. Limpa caches do navegador</p>"},{"location":"Front-Doc/#monitoramento","title":"Monitoramento","text":"<p>Logs:</p> <p>O sistema gera logs detalhados para debug: - <code>[Crypto]</code>: Opera\u00e7\u00f5es de criptografia - <code>[Storage]</code>: Opera\u00e7\u00f5es de armazenamento - <code>[Auth]</code>: Opera\u00e7\u00f5es de autentica\u00e7\u00e3o</p>"},{"location":"Front-Doc/#solucao-de-problemas","title":"Solu\u00e7\u00e3o de Problemas","text":"<p>Problemas Comuns:</p> <p>1. Criptografia n\u00e3o dispon\u00edvel - Verifique se o navegador suporta Web Crypto API - Use <code>cryptoUtils.isAvailable()</code> para verificar</p> <p>2. Dados corrompidos - Sistema remove automaticamente dados corrompidos - Verifique logs para detalhes de erro</p> <p>3. Falha na descriptografia - Pode indicar chave corrompida - Fa\u00e7a logout para gerar nova chave</p>"},{"location":"Front-Doc/#debug_1","title":"Debug","text":"<pre><code>// Verificar se criptografia est\u00e1 funcionando\nconst isAvailable = cryptoUtils.isAvailable();\nconsole.log('Criptografia dispon\u00edvel:', isAvailable);\n\n// Verificar se dados est\u00e3o criptografados\nconst rawData = localStorage.getItem('webId');\nconst isEncrypted = cryptoUtils.isEncrypted(rawData);\nconsole.log('Dados criptografados:', isEncrypted);\n</code></pre>"},{"location":"Front-Doc/#implementacao-tecnica","title":"Implementa\u00e7\u00e3o T\u00e9cnica","text":"<p>Fluxo de Criptografia: 1. Inicializa\u00e7\u00e3o: Gera ou recupera chave de criptografia 2. Salvamento: Serializa dados \u2192 Criptografa \u2192 Salva no localStorage 3. Leitura: L\u00ea do localStorage \u2192 Descriptografa \u2192 Desserializa 4. Limpeza: Remove chave e dados durante logout</p> <p>Algoritmo de Criptografia: - AES-GCM: Criptografia autenticada - Chave: 256 bits gerada com <code>crypto.subtle.generateKey()</code> - IV: 12 bytes aleat\u00f3rios para cada opera\u00e7\u00e3o - Formato: Base64 para armazenamento no localStorage</p> <p>Tratamento de Erros: - Fallback gracioso: Se criptografia falhar, usa dados n\u00e3o criptografados - Compatibilidade: Suporta dados n\u00e3o criptografados existentes - Logs detalhados: Para debug e monitoramento</p>"},{"location":"Front-Doc/#guia-de-desenvolvimento","title":"\ud83d\udee0\ufe0f Guia de Desenvolvimento","text":""},{"location":"Front-Doc/#padroes-de-desenvolvimento","title":"Padr\u00f5es de Desenvolvimento","text":""},{"location":"Front-Doc/#organizacao-de-componentes","title":"Organiza\u00e7\u00e3o de Componentes","text":"<ul> <li>Single Responsibility: Cada componente tem um prop\u00f3sito claro</li> <li>Composition over Inheritance: Composi\u00e7\u00e3o flex\u00edvel de componentes</li> <li>Props Interface: Contratos claros de componentes</li> <li>Default Props: Defaults sensatos para props opcionais</li> </ul>"},{"location":"Front-Doc/#gestao-de-estado","title":"Gest\u00e3o de Estado","text":"<ul> <li>Custom Hooks: L\u00f3gica de estado encapsulada</li> <li>Service Layer: Opera\u00e7\u00f5es de API separadas dos componentes</li> <li>Optimistic Updates: Feedback imediato na UI</li> <li>Error Boundaries: Tratamento gracioso de erros</li> </ul>"},{"location":"Front-Doc/#qualidade-de-codigo","title":"Qualidade de C\u00f3digo","text":"<ul> <li>TypeScript: Cobertura completa de tipos</li> <li>ESLint: Aplica\u00e7\u00e3o de qualidade de c\u00f3digo</li> <li>Prettier: Formata\u00e7\u00e3o consistente de c\u00f3digo</li> <li>Documenta\u00e7\u00e3o de Componentes: Exemplos claros de uso</li> </ul>"},{"location":"Front-Doc/#estrutura-de-um-componente","title":"Estrutura de um Componente","text":"<pre><code>// 1. Imports\nimport React from 'react';\nimport { useMyHook } from '@/hooks/use-my-hook';\nimport { MyService } from '@/lib/services/my-service';\n\n// 2. Types/Interfaces\ninterface MyComponentProps {\n  title: string;\n  onAction?: () =&gt; void;\n}\n\n// 3. Component\nexport function MyComponent({ title, onAction }: MyComponentProps) {\n  // 3.1. Hooks\n  const { data, isLoading } = useMyHook();\n\n  // 3.2. State\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  // 3.3. Effects\n  React.useEffect(() =&gt; {\n    // Effect logic\n  }, []);\n\n  // 3.4. Handlers\n  const handleClick = () =&gt; {\n    onAction?.();\n  };\n\n  // 3.5. Early returns\n  if (isLoading) return &lt;LoadingState /&gt;;\n\n  // 3.6. Render\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;{title}&lt;/h1&gt;\n      &lt;button onClick={handleClick}&gt;Action&lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"Front-Doc/#estrutura-de-um-hook","title":"Estrutura de um Hook","text":"<pre><code>// 1. Imports\nimport { useState, useEffect } from 'react';\nimport { MyService } from '@/lib/services/my-service';\n\n// 2. Types\ninterface UseMyHookReturn {\n  data: any;\n  isLoading: boolean;\n  error: Error | null;\n  refetch: () =&gt; void;\n}\n\n// 3. Hook\nexport function useMyHook(): UseMyHookReturn {\n  // 3.1. State\n  const [data, setData] = useState&lt;any&gt;(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState&lt;Error | null&gt;(null);\n\n  // 3.2. Functions\n  const fetchData = async () =&gt; {\n    try {\n      setIsLoading(true);\n      const result = await MyService.getData();\n      setData(result);\n    } catch (err) {\n      setError(err as Error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 3.3. Effects\n  useEffect(() =&gt; {\n    fetchData();\n  }, []);\n\n  // 3.4. Return\n  return {\n    data,\n    isLoading,\n    error,\n    refetch: fetchData\n  };\n}\n</code></pre>"},{"location":"Front-Doc/#estrutura-de-um-service","title":"Estrutura de um Service","text":"<pre><code>// 1. Imports\nimport { api } from '@/lib/api';\nimport type { MyData } from '@/lib/Interfaces/my-data.interface';\n\n// 2. Service Class\nexport class MyService {\n  // 2.1. Private properties\n  private static readonly BASE_URL = '/api/my-resource';\n\n  // 2.2. Public methods\n  static async getData(): Promise&lt;MyData[]&gt; {\n    const response = await api.get&lt;MyData[]&gt;(this.BASE_URL);\n    return response.data;\n  }\n\n  static async getById(id: string): Promise&lt;MyData&gt; {\n    const response = await api.get&lt;MyData&gt;(`${this.BASE_URL}/${id}`);\n    return response.data;\n  }\n\n  static async create(data: Partial&lt;MyData&gt;): Promise&lt;MyData&gt; {\n    const response = await api.post&lt;MyData&gt;(this.BASE_URL, data);\n    return response.data;\n  }\n\n  static async update(id: string, data: Partial&lt;MyData&gt;): Promise&lt;MyData&gt; {\n    const response = await api.put&lt;MyData&gt;(`${this.BASE_URL}/${id}`, data);\n    return response.data;\n  }\n\n  static async delete(id: string): Promise&lt;void&gt; {\n    await api.delete(`${this.BASE_URL}/${id}`);\n  }\n}\n</code></pre>"},{"location":"Front-Doc/#adicionando-novas-funcionalidades","title":"Adicionando Novas Funcionalidades","text":""},{"location":"Front-Doc/#1-criar-interface","title":"1. Criar Interface","text":"<pre><code>// src/lib/Interfaces/my-feature.interface.ts\nexport interface MyFeature {\n  id: string;\n  name: string;\n  description: string;\n  createdAt: Date;\n}\n</code></pre>"},{"location":"Front-Doc/#2-criar-service","title":"2. Criar Service","text":"<pre><code>// src/lib/services/my-feature.service.ts\nexport class MyFeatureService {\n  // Implementar m\u00e9todos\n}\n</code></pre>"},{"location":"Front-Doc/#3-criar-hook","title":"3. Criar Hook","text":"<pre><code>// src/hooks/use-my-feature.ts\nexport function useMyFeature() {\n  // Implementar l\u00f3gica\n}\n</code></pre>"},{"location":"Front-Doc/#4-criar-componentes","title":"4. Criar Componentes","text":"<pre><code>// src/components/my-feature/my-feature-card.tsx\nexport function MyFeatureCard() {\n  // Implementar componente\n}\n</code></pre>"},{"location":"Front-Doc/#5-adicionar-traducoes","title":"5. Adicionar Tradu\u00e7\u00f5es","text":"<pre><code>// src/locales/pt/my-feature.json\n{\n  \"title\": \"Minha Funcionalidade\",\n  \"description\": \"Descri\u00e7\u00e3o da funcionalidade\"\n}\n</code></pre> <pre><code>// src/locales/en/my-feature.json\n{\n  \"title\": \"My Feature\",\n  \"description\": \"Feature description\"\n}\n</code></pre>"},{"location":"Front-Doc/#6-adicionar-rotas-se-necessario","title":"6. Adicionar Rotas (se necess\u00e1rio)","text":"<pre><code>// src/App.tsx\n&lt;Route path=\"/my-feature\" element={&lt;MyFeaturePage /&gt;} /&gt;\n</code></pre>"},{"location":"Front-Doc/#melhores-praticas_1","title":"Melhores Pr\u00e1ticas","text":""},{"location":"Front-Doc/#performance","title":"Performance","text":"<ol> <li>Memoiza\u00e7\u00e3o: Use <code>React.memo()</code> para componentes pesados</li> <li>useMemo: Cache c\u00e1lculos caros</li> <li>useCallback: Evite recria\u00e7\u00e3o de fun\u00e7\u00f5es</li> <li>Lazy Loading: Carregue componentes sob demanda</li> <li>Code Splitting: Divida o bundle em chunks menores</li> </ol> <pre><code>// Exemplo de otimiza\u00e7\u00e3o\nimport React, { memo, useMemo, useCallback } from 'react';\n\nconst MyComponent = memo(({ data, onAction }) =&gt; {\n  // Cache c\u00e1lculo caro\n  const processedData = useMemo(() =&gt; {\n    return data.map(item =&gt; heavyProcessing(item));\n  }, [data]);\n\n  // Cache fun\u00e7\u00e3o de callback\n  const handleClick = useCallback(() =&gt; {\n    onAction(processedData);\n  }, [onAction, processedData]);\n\n  return &lt;div onClick={handleClick}&gt;{/* render */}&lt;/div&gt;;\n});\n</code></pre>"},{"location":"Front-Doc/#tipagem-typescript","title":"Tipagem TypeScript","text":"<ol> <li>Evite <code>any</code>: Use tipos espec\u00edficos sempre que poss\u00edvel</li> <li>Interfaces sobre Types: Prefira interfaces para objetos</li> <li>Gen\u00e9ricos: Use para componentes e fun\u00e7\u00f5es reutiliz\u00e1veis</li> <li>Type Guards: Implemente guards para valida\u00e7\u00e3o de tipos</li> </ol> <pre><code>// Bom exemplo\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n}\n\nfunction isUser(obj: any): obj is User {\n  return typeof obj.id === 'string' \n    &amp;&amp; typeof obj.name === 'string'\n    &amp;&amp; typeof obj.email === 'string';\n}\n\n// Componente gen\u00e9rico\ninterface ListProps&lt;T&gt; {\n  items: T[];\n  renderItem: (item: T) =&gt; React.ReactNode;\n}\n\nfunction List&lt;T&gt;({ items, renderItem }: ListProps&lt;T&gt;) {\n  return &lt;&gt;{items.map(renderItem)}&lt;/&gt;;\n}\n</code></pre>"},{"location":"Front-Doc/#tratamento-de-erros_1","title":"Tratamento de Erros","text":"<ol> <li>Error Boundaries: Capture erros de renderiza\u00e7\u00e3o</li> <li>Try/Catch: Use em opera\u00e7\u00f5es ass\u00edncronas</li> <li>Mensagens Amig\u00e1veis: N\u00e3o exponha erros t\u00e9cnicos ao usu\u00e1rio</li> <li>Logging: Registre erros para debugging</li> </ol> <pre><code>// Error Boundary\nclass ErrorBoundary extends React.Component {\n  state = { hasError: false };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error caught:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return &lt;ErrorFallback /&gt;;\n    }\n    return this.props.children;\n  }\n}\n\n// Tratamento em hook\nconst fetchData = async () =&gt; {\n  try {\n    const data = await api.getData();\n    setData(data);\n  } catch (error) {\n    console.error('Failed to fetch data:', error);\n    toast({\n      title: 'Erro',\n      description: 'N\u00e3o foi poss\u00edvel carregar os dados.',\n      variant: 'destructive'\n    });\n  }\n};\n</code></pre>"},{"location":"Front-Doc/#acessibilidade","title":"Acessibilidade","text":"<ol> <li>ARIA Labels: Use labels descritivos</li> <li>Keyboard Navigation: Suporte navega\u00e7\u00e3o por teclado</li> <li>Focus Management: Gerencie foco adequadamente</li> <li>Semantic HTML: Use tags sem\u00e2nticas</li> </ol> <pre><code>// Bom exemplo\n&lt;button\n  aria-label=\"Fechar modal\"\n  onClick={handleClose}\n  onKeyDown={(e) =&gt; e.key === 'Escape' &amp;&amp; handleClose()}\n&gt;\n  &lt;X aria-hidden=\"true\" /&gt;\n&lt;/button&gt;\n</code></pre>"},{"location":"Front-Doc/#testes","title":"\ud83e\uddea Testes","text":""},{"location":"Front-Doc/#estrutura-de-testes","title":"Estrutura de Testes","text":"<pre><code>src/\n\u251c\u2500\u2500 components/\n\u2502   \u2514\u2500\u2500 __tests__/\n\u2502       \u2514\u2500\u2500 my-component.test.tsx\n\u251c\u2500\u2500 hooks/\n\u2502   \u2514\u2500\u2500 __tests__/\n\u2502       \u2514\u2500\u2500 use-my-hook.test.ts\n\u2514\u2500\u2500 lib/\n    \u2514\u2500\u2500 services/\n        \u2514\u2500\u2500 __tests__/\n            \u2514\u2500\u2500 my-service.test.ts\n</code></pre>"},{"location":"Front-Doc/#executar-testes","title":"Executar Testes","text":"<pre><code># Todos os testes\nnpm test\n\n# Modo watch\nnpm test:watch\n\n# Com cobertura\nnpm test:coverage\n\n# Teste espec\u00edfico\nnpm test my-component.test.tsx\n</code></pre>"},{"location":"Front-Doc/#exemplo-de-teste-de-componente","title":"Exemplo de Teste de Componente","text":"<pre><code>import { render, screen, fireEvent } from '@testing-library/react';\nimport { MyComponent } from './my-component';\n\ndescribe('MyComponent', () =&gt; {\n  it('should render title', () =&gt; {\n    render(&lt;MyComponent title=\"Test Title\" /&gt;);\n    expect(screen.getByText('Test Title')).toBeInTheDocument();\n  });\n\n  it('should call onAction when button clicked', () =&gt; {\n    const onAction = jest.fn();\n    render(&lt;MyComponent title=\"Test\" onAction={onAction} /&gt;);\n\n    fireEvent.click(screen.getByRole('button'));\n    expect(onAction).toHaveBeenCalled();\n  });\n});\n</code></pre>"},{"location":"Front-Doc/#exemplo-de-teste-de-hook","title":"Exemplo de Teste de Hook","text":"<pre><code>import { renderHook, waitFor } from '@testing-library/react';\nimport { useMyHook } from './use-my-hook';\n\ndescribe('useMyHook', () =&gt; {\n  it('should fetch data', async () =&gt; {\n    const { result } = renderHook(() =&gt; useMyHook());\n\n    expect(result.current.isLoading).toBe(true);\n\n    await waitFor(() =&gt; {\n      expect(result.current.isLoading).toBe(false);\n    });\n\n    expect(result.current.data).toBeDefined();\n  });\n});\n</code></pre>"},{"location":"Front-Doc/#exemplo-de-teste-de-service","title":"Exemplo de Teste de Service","text":"<pre><code>import { MyService } from './my-service';\nimport { api } from '@/lib/api';\n\njest.mock('@/lib/api');\n\ndescribe('MyService', () =&gt; {\n  it('should fetch data', async () =&gt; {\n    const mockData = [{ id: '1', name: 'Test' }];\n    (api.get as jest.Mock).mockResolvedValue({ data: mockData });\n\n    const result = await MyService.getData();\n\n    expect(result).toEqual(mockData);\n    expect(api.get).toHaveBeenCalledWith('/api/my-resource');\n  });\n});\n</code></pre>"},{"location":"Front-Doc/#testes-do-sistema-de-fila-de-validacao","title":"Testes do Sistema de Fila de Valida\u00e7\u00e3o","text":""},{"location":"Front-Doc/#testes-unitarios","title":"Testes Unit\u00e1rios","text":"<pre><code>npm test memory-validation-queue.test.ts\n</code></pre> <p>Cobertura: - \u2705 Padr\u00e3o Singleton - \u2705 Adicionar \u00e0 fila - \u2705 Estat\u00edsticas - \u2705 Subscribe/Unsubscribe - \u2705 Itens ativos - \u2705 Limpar conclu\u00eddos - \u2705 Persist\u00eancia - \u2705 Recupera\u00e7\u00e3o ap\u00f3s reload</p>"},{"location":"Front-Doc/#testes-manuais","title":"Testes Manuais","text":"<p>Consulte: MANUAL-TESTING-GUIDE.md</p> <p>16 cen\u00e1rios detalhados de teste incluindo: 1. Adicionar \u00e0 fila e processar com sucesso 2. M\u00faltiplos itens na fila 3. Tratamento de erro com retry 4. Persist\u00eancia (reload de p\u00e1gina) 5. Recupera\u00e7\u00e3o de item em processamento 6. Intera\u00e7\u00e3o com monitor 7. Retry manual de item falhado 8. Remover item 9. Limpar tudo 10. Teste de stress (10 itens) 11. Navega\u00e7\u00e3o durante processamento 12. Verifica\u00e7\u00e3o localStorage 13. Logs completos 14. Auto-processamento ao carregar 15. Comportamento com localStorage cheio 16. M\u00faltiplas abas abertas</p>"},{"location":"Front-Doc/#solucao-de-problemas_1","title":"\ud83d\udd0d Solu\u00e7\u00e3o de Problemas","text":""},{"location":"Front-Doc/#problemas-comuns","title":"Problemas Comuns","text":""},{"location":"Front-Doc/#1-aplicacao-nao-inicia","title":"1. Aplica\u00e7\u00e3o n\u00e3o inicia","text":"<p>Problema: Erros ao executar <code>npm run dev</code></p> <p>Solu\u00e7\u00f5es: <pre><code># Limpar node_modules e reinstalar\nrm -rf node_modules package-lock.json\nnpm install\n\n# Limpar cache do npm\nnpm cache clean --force\n\n# Verificar vers\u00e3o do Node\nnode --version  # Deve ser 18+\n</code></pre></p>"},{"location":"Front-Doc/#2-traducoes-nao-aparecem","title":"2. Tradu\u00e7\u00f5es n\u00e3o aparecem","text":"<p>Problema: Textos n\u00e3o s\u00e3o traduzidos</p> <p>Solu\u00e7\u00f5es: 1. Verifique se a chave existe no arquivo JSON 2. Confirme o namespace correto 3. Verifique se o arquivo foi importado em <code>i18n/index.ts</code> 4. Limpe o cache do navegador</p> <pre><code>// Debug\nconst { t, language } = useI18n();\nconsole.log('Current language:', language);\nconsole.log('Translation:', t('common.title'));\n</code></pre>"},{"location":"Front-Doc/#3-idioma-nao-muda","title":"3. Idioma n\u00e3o muda","text":"<p>Problema: Idioma n\u00e3o altera ao clicar no seletor</p> <p>Solu\u00e7\u00f5es: 1. Verifique se localStorage est\u00e1 funcionando 2. Confirme se o componente est\u00e1 re-renderizando 3. Verifique erros no console</p> <pre><code>// Debug\nlocalStorage.getItem('i18nextLng');  // Ver idioma salvo\n</code></pre>"},{"location":"Front-Doc/#4-cache-nao-funciona","title":"4. Cache n\u00e3o funciona","text":"<p>Problema: Dados n\u00e3o s\u00e3o carregados do cache</p> <p>Solu\u00e7\u00f5es: 1. Verifique se localStorage tem espa\u00e7o 2. Confirme que <code>CACHE_DURATION</code> est\u00e1 configurado 3. Verifique logs no console</p> <pre><code>// Debug\nconst cached = localStorage.getItem('user_cache');\nconsole.log('Cached data:', cached);\n</code></pre>"},{"location":"Front-Doc/#5-criptografia-nao-funciona","title":"5. Criptografia n\u00e3o funciona","text":"<p>Problema: Dados n\u00e3o s\u00e3o criptografados</p> <p>Solu\u00e7\u00f5es: 1. Verifique se navegador suporta Web Crypto API 2. Use <code>cryptoUtils.isAvailable()</code> para verificar 3. Verifique se est\u00e1 em HTTPS (necess\u00e1rio em produ\u00e7\u00e3o)</p> <pre><code>// Debug\nimport { cryptoUtils } from '@/lib/Utils/crypto';\nconsole.log('Crypto available:', cryptoUtils.isAvailable());\n</code></pre>"},{"location":"Front-Doc/#6-fila-de-validacao-nao-processa","title":"6. Fila de valida\u00e7\u00e3o n\u00e3o processa","text":"<p>Problema: Itens ficam presos na fila</p> <p>Solu\u00e7\u00f5es: 1. Verifique logs no console 2. Verifique localStorage: <code>memory-validation-queue</code> 3. Limpe a fila se necess\u00e1rio</p> <pre><code>// Debug no Console\nconst queue = MemoryValidationQueueService.getInstance();\nconsole.log('Queue stats:', queue.getStats());\nconsole.log('Active items:', queue.getActiveItems());\n\n// Limpar fila\nlocalStorage.removeItem('memory-validation-queue');\n</code></pre>"},{"location":"Front-Doc/#7-erros-de-autenticacao","title":"7. Erros de autentica\u00e7\u00e3o","text":"<p>Problema: Usu\u00e1rio n\u00e3o consegue fazer login</p> <p>Solu\u00e7\u00f5es: 1. Verifique se backend est\u00e1 rodando 2. Confirme URLs de API nas vari\u00e1veis de ambiente 3. Limpe cache e cookies 4. Verifique console para erros espec\u00edficos</p> <pre><code># Limpar tudo\nlocalStorage.clear();\nsessionStorage.clear();\n# Recarregar p\u00e1gina\n</code></pre>"},{"location":"Front-Doc/#8-componentes-nao-carregam","title":"8. Componentes n\u00e3o carregam","text":"<p>Problema: Tela branca ou componentes n\u00e3o aparecem</p> <p>Solu\u00e7\u00f5es: 1. Verifique Error Boundaries 2. Abra console para ver erros 3. Verifique imports de componentes 4. Confirme que rotas est\u00e3o configuradas</p> <pre><code>// Adicionar Error Boundary para debug\n&lt;ErrorBoundary&gt;\n  &lt;MyComponent /&gt;\n&lt;/ErrorBoundary&gt;\n</code></pre>"},{"location":"Front-Doc/#debug-geral","title":"Debug Geral","text":""},{"location":"Front-Doc/#console-logs-uteis","title":"Console Logs \u00dateis","text":"<pre><code>// Ver estado da autentica\u00e7\u00e3o\nconsole.log('Auth state:', localStorage.getItem('webId'));\n\n// Ver cache de usu\u00e1rio\nconsole.log('User cache:', localStorage.getItem('user_cache'));\n\n// Ver idioma atual\nconsole.log('Language:', localStorage.getItem('i18nextLng'));\n\n// Ver fila de valida\u00e7\u00e3o\nconsole.log('Queue:', localStorage.getItem('memory-validation-queue'));\n\n// Ver todas as chaves em localStorage\nObject.keys(localStorage).forEach(key =&gt; {\n  console.log(key, localStorage.getItem(key));\n});\n</code></pre>"},{"location":"Front-Doc/#devtools-network","title":"DevTools Network","text":"<ol> <li>Abra DevTools \u2192 Network</li> <li>Filtre por requisi\u00e7\u00f5es espec\u00edficas</li> <li>Verifique status codes e payloads</li> <li>Use throttling para simular conex\u00e3o lenta</li> </ol>"},{"location":"Front-Doc/#react-devtools","title":"React DevTools","text":"<ol> <li>Instale extens\u00e3o React DevTools</li> <li>Inspecione componentes e props</li> <li>Verifique hooks e state</li> <li>Use Profiler para performance</li> </ol>"},{"location":"Front-Doc/#recursos-adicionais","title":"\ud83d\udcda Recursos Adicionais","text":""},{"location":"Front-Doc/#documentacao-por-modulo","title":"Documenta\u00e7\u00e3o por M\u00f3dulo","text":"<p>Cada m\u00f3dulo principal tem sua pr\u00f3pria documenta\u00e7\u00e3o detalhada:</p> <ul> <li>Sistema de Mem\u00f3ria</li> <li>Trilhas de Carreira</li> <li>Sistema de Chat</li> <li>Perfil do Usu\u00e1rio</li> <li>Sistema de Cache</li> <li>Internacionaliza\u00e7\u00e3o</li> <li>Criptografia</li> <li>Fila de Valida\u00e7\u00e3o</li> <li>Guia de Testes Manuais</li> <li>Implementa\u00e7\u00e3o da Fila</li> </ul>"},{"location":"Front-Doc/#links-uteis","title":"Links \u00dateis","text":"<ul> <li>React Documentation</li> <li>TypeScript Documentation</li> <li>React Query Documentation</li> <li>Tailwind CSS Documentation</li> <li>react-i18next Documentation</li> </ul>"},{"location":"Front-Doc/#contribuindo","title":"\ud83e\udd1d Contribuindo","text":""},{"location":"Front-Doc/#como-contribuir","title":"Como Contribuir","text":"<ol> <li>Siga os padr\u00f5es de c\u00f3digo estabelecidos</li> <li>Mantenha type safety do TypeScript</li> <li>Adicione documenta\u00e7\u00e3o para novas funcionalidades</li> <li>Escreva testes para novos componentes</li> <li>Siga o estilo de c\u00f3digo existente</li> <li>Mantenhe tradu\u00e7\u00f5es em ambos os idiomas</li> </ol>"},{"location":"Front-Doc/#checklist-de-pull-request","title":"Checklist de Pull Request","text":"<ul> <li>[ ] C\u00f3digo segue padr\u00f5es estabelecidos</li> <li>[ ] Tipos TypeScript est\u00e3o corretos</li> <li>[ ] Testes foram adicionados/atualizados</li> <li>[ ] Documenta\u00e7\u00e3o foi atualizada</li> <li>[ ] Tradu\u00e7\u00f5es foram adicionadas (pt/en)</li> <li>[ ] C\u00f3digo foi testado localmente</li> <li>[ ] Sem erros de linting</li> <li>[ ] Performance foi considerada</li> </ul>"},{"location":"Front-Doc/#licenca","title":"\ud83d\udcc4 Licen\u00e7a","text":"<p>Este projeto \u00e9 parte da plataforma Karrera AI.</p>"},{"location":"Front-Doc/#suporte","title":"\ud83d\udcde Suporte","text":"<p>Para problemas ou d\u00favidas: - Verifique os logs do console - Consulte a documenta\u00e7\u00e3o espec\u00edfica do m\u00f3dulo - Verifique localStorage e sessionStorage - Teste com dados limpos: limpe cache e storage</p> <p>\u00daltima atualiza\u00e7\u00e3o: Outubro 2025 Vers\u00e3o da documenta\u00e7\u00e3o: 1.0.0</p>"},{"location":"Personal-AI-APIs/","title":"Personal-AI APIs","text":"<p>This document explains the APIs interactions of the Personal AI backend for the Karrera - Personal AI project. It details the entire flow from user creation to the end results, detailing all the methods with their respective inputs and outputs.</p>"},{"location":"Personal-AI-APIs/#api-interactions","title":"API Interactions","text":"<p>The user will begin by creating a session and then choosing between three different methods for providing the application with information pertaining to himself, searching the web, uploading a resume (CV) or just having a conversation with an AI agent. All three methods can be used in conjunction and will contribute to a better overall understanding of the user. </p> <p>The main order of interaction is detailed in the following diagram:</p> <pre><code>graph LR\n    A[User Init API]\n    B[Upload CV]\n    C[Scrape the Web]\n    subgraph Chat with AI\n        direction LR\n        D1[Create Conversation]\n        D2[Send Chosen Question]\n        D3[Chat Session]\n        D4[Extract Chat Information]\n    end\n    E[Filter Entities]\n    F[JSON Processor]\n\n    A --&gt; B\n    A --&gt; C\n    A --&gt; D1\n    D1 --&gt; D2\n    D2 --&gt; D3\n    D3 --&gt; D4\n    B --&gt; E\n    C --&gt; E\n    D4 --&gt; E\n    E --&gt; F</code></pre>"},{"location":"Personal-AI-APIs/#apis-endpoints","title":"APIs Endpoints","text":""},{"location":"Personal-AI-APIs/#user-init-api","title":"User Init. API:","text":"<p>Creates the User Session, saving all necessary arguments for the session in Redis.</p> <ul> <li>Endpoint = /user_session_init</li> <li> <p>Method = POST</p> <ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session </li> <li>name = User full name</li> </ul> </li> <li>RETURNS:<ul> <li>Start the user session in Redis under {user-id}</li> </ul> </li> </ul> Redis Arguments: <pre><code>.name = name\n.JSON_scrape = ''\n.JSON_cv = ''\n.JSON_chat = ''\n.JSON_scrape_filtered = ''\n.JSON_cv_filtered = ''\n.JSON_chat_filtered = ''\n.JSON_combined = ''\n.bio = ''\n.edited_bio = ''\n.bio_flag = ''\n.working_env = ''\n.user_last_method = ''\n</code></pre> </li> <li> <p>Endpoint = /cv_reader</p> </li> <li>Method = POST<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session </li> <li>file = curriculum document (.pdf or .docx)</li> <li>From Redis:<ul> <li>.name = name of the user</li> </ul> </li> </ul> </li> <li>RETURNS:<ul> <li>A JSON file saved in Redis under JSON_cv</li> </ul> </li> </ul> </li> </ul> JSON_example.json<pre><code>{\n   \"entities\":[\n      {\n         \"person\":[\n            {\n               \"name\":\"John Jay Doe\",\n               \"description\":\"Executive with a diverse and international career\",\n               \"date\":\"\",\n               \"source\":[\n                  \"User-sent Document\"\n               ]\n            }\n         ],\n         \"education\":[\n            {\n               \"name\":\"University Of John'Doe\",\n               \"description\":\"MBA\",\n               \"date\":\"2001\",\n               \"source\":[\n                  \"User-sent Document\"\n               ]\n            }\n         ],\n         \"organization\":[\n            {\n               \"name\":\"John Doe Company\",\n               \"description\":\"Vice President\",\n               \"date\":\"\",\n               \"source\":[\n                  \"User-sent Document\"\n               ]\n            }\n         ],\n         \"project\":[\n            {\n               \"name\":\"John Doe's Project\",\n               \"description\":\"Project Description\",\n               \"date\":\"\",\n               \"source\":[\n                  \"User-sent Document\"\n               ]\n            },\n         ],\n   \"relationships\":[\n          {\n             \"source\":\"John Jay Doe\",\n             \"target\":\"University Of John'Doe\",\n             \"relationship\":\"studied at\",\n             \"relationship_strength\":4\n          },\n          {\n             \"source\":\"John Jay Doe\",\n             \"target\":\"John Doe Company\",\n             \"relationship\":\"worked at\",\n             \"relationship_strength\":4\n          },\n          {\n             \"source\":\"John Jay Doe\",\n             \"target\":\"John Doe's Project\",\n             \"relationship\":\"created\",\n             \"relationship_strength\":2\n          },    \n   ]\n}\n</code></pre> Redis Arguments: <pre><code>```\n.JSON_cv = Returned JSON file\n.user_last_method = 'cv'\n```\n</code></pre>"},{"location":"Personal-AI-APIs/#upload-cv","title":"Upload CV:","text":"<p>Reads a curriculum sent by the user, either in .pdf or .docx, and extracts from it a list of entities and relations related to the user.</p>"},{"location":"Personal-AI-APIs/#scrape-the-web","title":"Scrape the Web:","text":"<p>Searches the user by their name on the web and extracts entities and relations pertaining the user from all the text. </p> <ul> <li>Endpoint = /search_from_web</li> <li>Method = POST<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session </li> <li>location = optional, (default: us), alters the location of the search. Accepts any country name or iso code, as per country_converter python library.</li> <li>add-info = optional, (default: ''), adds information related to the user to the search, filtering the results, specially if the name is common or has a famous namesake.</li> <li>From Redis:<ul> <li>.name = name of the user</li> </ul> </li> </ul> </li> <li>RETURNS:<ul> <li>A JSON file saved in Redis under JSON_scrape</li> </ul> </li> </ul> </li> </ul> JSON_example.json<pre><code>{\n   \"entities\":[\n      {\n         \"person\":[\n            {\n               \"name\":\"John Jay Doe\",\n               \"description\":\"Executive with a diverse and international career\",\n               \"date\":\"\",\n               \"source\":[\n                  \"https://www.example-site.com\"\n               ]\n            }\n         ],\n         \"education\":[\n            {\n               \"name\":\"University Of John'Doe\",\n               \"description\":\"MBA\",\n               \"date\":\"2001\",\n               \"source\":[\n                  \"https://www.example-site2.com\"\n               ]\n            }\n         ],\n         \"organization\":[\n            {\n               \"name\":\"John Doe Company\",\n               \"description\":\"Vice President\",\n               \"date\":\"\",\n               \"source\":[\n                  \"https://www.example-site2.com\"\n               ]\n            }\n         ],\n         \"project\":[\n            {\n               \"name\":\"John Doe's Project\",\n               \"description\":\"Project Description\",\n               \"date\":\"\",\n               \"source\":[\n                  \"https://www.example-site3.com\"\n               ]\n            },\n         ],\n   \"relationships\":[\n          {\n             \"source\":\"John Jay Doe\",\n             \"target\":\"University Of John'Doe\",\n             \"relationship\":\"studied at\",\n             \"relationship_strength\":4\n          },\n          {\n             \"source\":\"John Jay Doe\",\n             \"target\":\"John Doe Company\",\n             \"relationship\":\"worked at\",\n             \"relationship_strength\":4\n          },\n          {\n             \"source\":\"John Jay Doe\",\n             \"target\":\"John Doe's Project\",\n             \"relationship\":\"created\",\n             \"relationship_strength\":2\n          },    \n   ]\n}\n</code></pre> Redis Arguments: <pre><code>```\n.JSON_scrape = Returned JSON file\n.user_last_method = 'scrape'\n```\n</code></pre>"},{"location":"Personal-AI-APIs/#chat-with-ai","title":"Chat with AI:","text":"<p>Creates a chat between an AI agent and the user. The objective is inquiring about the user professional accomplishments and extract those entities/relations from the conversation.</p>"},{"location":"Personal-AI-APIs/#create-conversation","title":"Create Conversation:","text":"<p>If the user already has a biography created on the app, this API generates personalized questions for the user, otherwise it uses generic questions to start.</p> <ul> <li>Endpoint = /create_conversation</li> <li>Method = GET<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>From Redis:<ul> <li>.name = name of the user</li> <li>.bio = user biography (optional)</li> </ul> </li> </ul> </li> <li>RETURNS:<ul> <li>If .bio is in Redis, returns 5 personalized questions, else returns 5 generic questions.</li> </ul> </li> </ul> </li> </ul> personalized_questions_example.json<pre><code>{\n    \"1\": {\n        \"message\": \"Hi John Doe, can you tell us about your experience as Vice President at John Doe Company?\",\n        \"topic\": \"Leadership Positions\"\n    },\n    \"2\": {\n        \"message\": \"Hello John Doe, what inspired you to pursue an MBA from the University Of John'Doe, and how has it impacted your career?\",\n        \"topic\": \"Education\"\n    },\n    \"3\": {\n        \"message\": \"Hi John Doe, can you walk us through your experience as Executive Director of Technology at John Doe's Business?\",\n        \"topic\": \"Leadership Positions\"\n    },\n    \"4\": {\n        \"message\": \"Hello John Doe, can you share with us your experience as Co-Founder at John Doe's Second Business, and what motivated you to start this venture?\",\n        \"topic\": \"Entrepreneurship\"\n    },\n    \"5\": {\n        \"message\": \"Hi John Doe, how do you stay up-to-date with the latest trends and technologies in your field, and how do you apply them in your work?\",\n        \"topic\": \"Professional Development\"\n    }\n}\n</code></pre> chat history<pre><code>[\n    {\n        \"role\": \"user\",\n        \"content\": [\n            {\n                \"text\": \"Let's start this conversation!\"\n            }\n        ]\n    },\n    {\n        \"role\": \"system\",\n        \"content\": \"1749650098.343819\"\n    }\n]\n</code></pre> Redis Arguments: <pre><code>.history = Creates the chat history\n.questions = json with questions if not using generic questions\n</code></pre>"},{"location":"Personal-AI-APIs/#send-chosen-question","title":"Send Chosen Question:","text":"<p>Lets the user choose one of the five questions to start the conversation.</p> <ul> <li>Endpoint = /send_chosen_question</li> <li>Method = POST<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>user-input = One of the questions, chosen by the user</li> </ul> </li> <li>RETURNS:<ul> <li>Appends the chosen question to the chat history.</li> </ul> </li> </ul> </li> </ul> user-input (first question chosen)<pre><code>{\n    \"user-input\": \"Hello John Doe, what inspired you to pursue an MBA from the University Of John'Doe, and how has it impacted your career?\"\n}\n</code></pre> updated history<pre><code>[\n    {\n        \"role\": \"user\",\n        \"content\": [\n            {\n                \"text\": \"Let's start this conversation!\"\n            }\n        ]\n    },\n    {\n        \"role\": \"system\",\n        \"content\": \"1749650098.343819\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"text\": \"Hello John Doe, what inspired you to pursue an MBA from the University Of John'Doe, and how has it impacted your career?\"\n            }\n        ]\n    },\n    {\n        \"role\": \"system\",\n        \"content\": \"1749651681.779023\"\n    }\n]\n</code></pre> Redis Arguments: <pre><code>.history = Updates the chat history with chosen question\n</code></pre>"},{"location":"Personal-AI-APIs/#chat-session","title":"Chat Session:","text":"<p>Maintains the conversation between the AI agent and the user. </p> <ul> <li>Endpoint = /chat_session </li> <li>Method = POST<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>user-input = The user answers to the questions</li> </ul> </li> <li>RETURNS:<ul> <li>Keeps returning the chat response and questions until the user exits the conversation.</li> </ul> </li> </ul> </li> </ul> user-input (answers)<pre><code>{\n    \"user-input\": \"I pursued my MBA at the University of John Doe primarily to broaden my business acumen beyond my specialized field and to gain leadership skills for more strategic roles.\"\n}\n</code></pre> conversation history<pre><code>[\n    {\n        \"role\": \"user\",\n        \"content\": [\n            {\n                \"text\": \"Let's start this conversation!\"\n            }\n        ]\n    },\n    {\n        \"role\": \"system\",\n        \"content\": \"1749650098.343819\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"text\": \"Hello John Doe, what inspired you to pursue an MBA from the University Of John'Doe, and how has it impacted your career?\"\n            }\n        ]\n    },\n    {\n        \"role\": \"system\",\n        \"content\": \"1749651681.779023\"\n    },\n    {\n        \"role\": \"user\",\n        \"content\": [\n            {\n                \"text\": \"I pursued my MBA at the University of John Doe primarily to broaden my business acumen beyond my specialized field and to gain leadership skills for more strategic roles.\"\n            }\n        ]\n    },\n    {\n        \"role\": \"system\",\n        \"content\": \"1749652482.474502\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"content\": [\n            {\n                \"text\": \"Let's move on to your work experience. You've held various leadership positions, including Vice President at John Doe's Business. What specific challenges did you face in this role, and how did you overcome them?\"\n            }\n        ]\n    },\n    {\n        \"role\": \"system\",\n        \"content\": \"1749652483.2849646\"\n    },\n    {\n        \"role\": \"user\",\n        \"content\": [\n            {\n                \"text\": \"At John Doe's Business, as VP, one significant challenge was prioritizing product development with limited resources while balancing diverse customer needs and market trends. We were a growing company, and everyone had great ideas, but we couldn't pursue them all at once. To overcome this, I implemented a more data-driven product roadmap strategy.\"\n            }\n        ]\n    },\n    {\n        \"role\": \"system\",\n        \"content\": \"1749652526.8790202\"\n    },\n    ...\n]\n</code></pre> Redis Arguments: <pre><code>.history = Updates the chat history with the entire conversation\n</code></pre>"},{"location":"Personal-AI-APIs/#extract-chat-information","title":"Extract Chat Information:","text":"<p>Extract a list of entities and relations from a conversation history.</p> <ul> <li>Endpoint = /extract_from_chat</li> <li>Method = POST<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>From Redis:<ul> <li>.name = name of the user</li> <li>.history = conversation history</li> </ul> </li> </ul> </li> <li>RETURNS:<ul> <li>A JSON file saved in Redis under JSON_chat</li> </ul> </li> </ul> </li> </ul> JSON_example.json<pre><code>{\n   \"entities\":[\n      {\n         \"person\":[\n            {\n               \"name\":\"John Jay Doe\",\n               \"description\":\"The person in the conversation\"\n            }\n         ],\n         \"education\":[\n            {\n               \"name\":\"University Of John'Doe\",\n               \"description\":\"A university where John Jay Doe earned his MBA\"\n            },\n            {\n               \"name\":\"University Of John'Doe\",\n               \"description\":\"A university mentioned in the conversation\"\n            }\n         ],\n         \"organization\":[\n            {\n               \"name\":\"John Doe's Business\",\n               \"description\":\"A company where John Jay Doe worked as VP\"\n            },\n            {\n               \"name\":\"John Doe's Business\",\n               \"description\":\"A company co-founded by John Jay Doe\"\n            }\n         ]\n      }\n   ],\n   \"relationships\":[\n      {\n         \"source\":\"John Jay Doe\",\n         \"target\":\"University Of John'Doe\",\n         \"relationship\":\"earned MBA from\",\n         \"relationship_strength\":4\n      },\n      {\n         \"source\":\"John Jay Doe\",\n         \"target\":\"University Of John'Doe\",\n         \"relationship\":\"pursued MBA from\",\n         \"relationship_strength\":4\n      },\n      {\n         \"source\":\"John Jay Doe\",\n         \"target\":\"John Doe's Business\",\n         \"relationship\":\"worked as VP\",\n         \"relationship_strength\":4\n      },\n      {\n         \"source\":\"John Jay Doe\",\n         \"target\":\"John Doe's Business\",\n         \"relationship\":\"co-founded\",\n         \"relationship_strength\":4\n      },\n      {\n         \"source\":\"John Jay Doe\",\n         \"target\":\"John Doe's Business\",\n         \"relationship\":\"implemented data-driven product roadmap\",\n         \"relationship_strength\":3\n      },\n      {\n         \"source\":\"John Jay Doe\",\n         \"target\":\"John Doe's Business\",\n         \"relationship\":\"identified market gap and created solution\",\n         \"relationship_strength\":3\n      }\n   ]\n}\n</code></pre> Redis Arguments: <pre><code>.JSON_chat = Returned JSON file\n.user_last_method = 'chat'\n</code></pre>"},{"location":"Personal-AI-APIs/#filter-entities-and-json-processor","title":"Filter Entities and JSON Processor:","text":"<p>This API will be called after any data aquiring API, the front end will pass all the entities found on the used method (CV, Web Search or Chat) and presents it to the user. This API will receive all entities selected that the user thinks represents his person and add them to a JSON file called JSON_combined.  This JSON file will have all the information selected by the user from all the methods he ever used, serving as a collection of all his extracted entities.  </p> <ul> <li>Endpoint = /json_processor</li> <li>Method = POST<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>json file = the entities selected by the user, to filter the json, will be saved as .chosen_entities in Redis.</li> <li>From Redis:<ul> <li>.name = name of the user</li> <li>.JSON_combined = if it already exists otherwise it's created</li> <li>.user_last_method = cv, scrape or chat, to know which json is being filtered</li> <li>.JSON_scrape/cv/chat = the json file from which the user came from (as in .user_last_method)</li> </ul> </li> </ul> </li> <li>RETURNS:<ul> <li>A JSON file saved in Redis under JSON_combined</li> </ul> </li> </ul> </li> </ul> chosen_entities json format<pre><code>{\n    \"categories\": [\n        {\n            \"type\": \"Person\",\n            \"tag\": \"John Jay Doe\"\n        },\n        {\n            \"type\": \"Organization\",\n            \"tag\": \"John Doe's Business\"\n        },\n        {\n            \"type\": \"Education\",\n            \"tag\": \"University Of John'Doe\"\n        },\n        {\n            \"type\": \"Organization\",\n            \"tag\": \"John Doe's Second Business\"\n        },\n        {\n            \"type\": \"Organization\",\n            \"tag\": \"John Doe Company\"\n        }\n    ]\n}\n</code></pre> JSON_combined_example.json<pre><code>{\n   \"person\":[\n      {\n         \"name\":\"John Jay Doe\",\n         \"description\":\"Executive with a diverse and international career\",\n         \"date\":\"\",\n         \"source\":[\n            \"User-sent Document\"\n         ]\n      }\n   ],\n   \"organization\":[\n      {\n         \"name\":\"John Doe's Business\",\n         \"description\":\"Vice President\",\n         \"date\":\"\",\n         \"source\":[\n            \"https://www.example-site2.com\"\n         ]\n      },\n      {\n         \"name\":\"John Doe's Second Business\",\n         \"description\":\"Executive Director of Tecnology\",\n      },\n      {\n         \"name\":\"John Doe Company\",\n         \"description\":\"Co-Founder\",\n         \"date\":\"\",\n         \"source\":[\n            \"User-sent Document\"\n         ]\n      }\n   ],\n   \"education\":[\n      {\n         \"name\":\"University Of John'Doe\",\n         \"description\":\"MBA\",\n      }\n   ]\n}\n</code></pre> Redis Arguments: <pre><code>.JSON_scrape/cv/chat_filtered = The respective json file but with only the entities selected by the user\n.user_last_method = '' ; after passing this method the user_last_method is reset so that the user can run another method from the start\n.JSON_combined = will have all entities selected by the user appended to it as long as they're not repeated\n</code></pre>"},{"location":"Personal-AI-APIs/#biography-and-picture","title":"Biography and Picture","text":"<p>After having some information on a JSON_combined file, the user will be able to have a short biography from it. From the biography he will be able to generate a random picture to use as an avatar. The user will also be able to edit/write his bio if he did not like the generated one. </p> <p>The following diagram summarizes this part of the APIs:</p> <pre><code>graph LR\n    A[Combined JSON]\n    B[Extract Biography]\n    C[Generate Picture]\n    subgraph Edit Biography\n        direction LR\n        D1[Get Selected Bio]\n        D2[Save Edited Bio]\n    end\n\n    A --&gt; B\n    B --&gt; D1\n    B --&gt; C\n    D1 &lt;--&gt; D2\n\n</code></pre>"},{"location":"Personal-AI-APIs/#extract-bio","title":"Extract Bio:","text":"<p>This API will generate a short biography based on the JSON_combined file. </p> <ul> <li>Endpoint = /extract_bio</li> <li>Method = POST<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>From Redis:<ul> <li>.name = name of the user</li> <li>.JSON_combined = if it already exists otherwise it's created</li> </ul> </li> </ul> </li> <li>RETURNS:<ul> <li>A short biography of the user, saved on Redis as .bio</li> </ul> </li> </ul> </li> </ul> Redis Arguments: <pre><code>.bio = User short biography\n.working_env = Describes the working environment of the user based on the biography. Used to generate a picture later.\n.JSON_combined = will have all entities selected by the user appended to it as long as they're not repeated\n</code></pre>"},{"location":"Personal-AI-APIs/#generate-picture","title":"Generate Picture:","text":"<p>Generates three possible images of the user based on a working environment that is based on his biography. Each image is generated with different ages in mind (20, 40 and 60 years).</p> <ul> <li>Endpoint = /get_profile_picture</li> <li>Method = GET<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>From Redis:<ul> <li>.name = name of the user</li> <li>.working_env = the working environment of the user based on the biography</li> </ul> </li> </ul> </li> <li>RETURNS:<ul> <li>Three base64 codes for images.</li> </ul> </li> </ul> </li> </ul> images result example<pre><code>{\n    \"data\": \"image/png\",\n    \"base64\": first_image_base64,\n    \"base64_2\": second_image_base64,\n    \"base64_3\": third_image_base64\n}\n</code></pre>"},{"location":"Personal-AI-APIs/#edit-biography","title":"Edit Biography","text":"<p>Allow the user edit his biography or write a new one. Also let the APIs know if they should use the edited biography or the generated one.</p>"},{"location":"Personal-AI-APIs/#get-selected-bio","title":"Get Selected Bio:","text":"<ul> <li>Endpoint = /get_selected_bio</li> <li>Method = PUT<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>bio-flag = manual/automatic - Sets the biography as manual (user edited) or automatic (generated).</li> </ul> </li> <li>RETURNS:<ul> <li>Sets bio-flag on Redis as manual or automatic</li> </ul> </li> </ul> </li> </ul> Redis Arguments: <pre><code>.bio-flag = manual or automatic\n</code></pre>"},{"location":"Personal-AI-APIs/#save-edited-bio","title":"Save Edited Bio:","text":"<p>Receives the new biography and saves it in Redis as .edited_bio.</p> <ul> <li>Endpoint = /save_edited_bio</li> <li>Method = POST<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>json file = The new biography</li> </ul> </li> <li>RETURNS:<ul> <li>Saves the new biography under .edited_bio in Redis</li> </ul> </li> </ul> </li> </ul> Redis Arguments: <pre><code>.edited_bio = new biography\n</code></pre>"},{"location":"Personal-AI-APIs/#front-end-only-api","title":"Front End only API","text":""},{"location":"Personal-AI-APIs/#get-session-data","title":"Get Session Data:","text":"<p>Used by the front end to get any data from the user session.</p> <ul> <li>Endpoint = /get_session_data</li> <li>Method = GET<ul> <li>INPUTS:<ul> <li>user-id = Identifies the user session</li> <li>session-data = any data from the session, all/history/etc.</li> </ul> </li> <li>RETURNS:<ul> <li>All/part of the user session data</li> </ul> </li> </ul> </li> </ul>"},{"location":"Solid/","title":"Solid","text":"<p>All user's information will be stored in a Solid POD. This structure will guarantee that the users's personal data are not stored in our servers and therefore prevent these information from being used without user's approval.</p> <p>This data repository stores various aspects of an individual's professional and personal profile, career capital, and interactions, organized using a structured schema. The files are primarily .ttl (Turtle) files, which are a syntax for RDF (Resource Description Framework), indicating a graph-like data structure where relationships between entities are explicit.</p>"},{"location":"Solid/#folder-structure","title":"FOLDER STRUCTURE","text":"<p>The application data are stored using a folder struture as follows:</p> <p></p> <p></p>"},{"location":"Solid/#list-of-files","title":"List of Files","text":"<p>These files are used to store specific information from each user and will be described further in this document:</p> <ul> <li>YYYY-MM-DDThhmmssZ.kar</li> <li>.version.ttl</li> <li>.artifacts-index.ttl</li> <li>.narrative-index.ttl</li> <li>.item-index.ttl</li> <li>.memory-working-index.ttl</li> <li>.memory-discarded-index.ttl</li> <li>.memory-longterm-index.ttl</li> <li>.persona-index.ttl</li> <li>.forum-index.ttl</li> <li>.organization-index.ttl</li> <li>.person-index.ttl</li> <li>.project-index.ttl</li> <li>.CCIH-Definitions.ttl</li> <li>CCIH-history.ttl</li> <li>CCIH.ttl</li> <li>.WorkDNA-Definitions.ttl</li> <li>WorkDNA-history.ttl</li> <li>WorkDNA.ttl</li> <li>PAI.ttl</li> <li>MSG.ttl</li> <li>PI-history.ttl</li> <li>PI.ttl</li> <li>item.ttl</li> <li>organization.ttl</li> <li>person.ttl</li> <li>project.ttl</li> </ul>"},{"location":"Solid/#files-descriptions","title":"Files Descriptions","text":""},{"location":"Solid/#yyyy-mm-ddthhmmsszkar","title":"YYYY-MM-DDThhmmssZ.kar","text":"<p>Description</p> <p>This is an encripted tar file that contains the whole KarreraAi folder content. It will be used as a source to restore user's data in case of file corruption and/or deletion.</p> <p>Workflow Diagram</p> <p></p>"},{"location":"Solid/#versionttl","title":".version.ttl","text":"<p>File Location</p> <p>/KarreraAI/.system/ <p>Description</p> <p>This file is used to define the KarreraAi Data Structure version. It will be used to check version and decide whether to update the structure or reject the user login depending on the situation.</p> <p>File Structure</p> .version.ttl<pre><code>@prefix dcterms: &lt;http://purl.org/dc/terms/&gt; .\n@prefix esco:    &lt;http://data.europa.eu/esco/model#&gt; .\n@prefix schema:  &lt;https://schema.org/&gt; .\n@prefix skos:    &lt;http://www.w3.org/2004/02/skos/core#&gt; .\n@prefix xsd:     &lt;http://www.w3.org/2001/XMLSchema#&gt; .\n\n&lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/.system/.version.ttl&gt;\n        a                   schema:Dataset;\n        dcterms:date        \"YYYY-MM-DD\"^^xsd:date;\n        dcterms:hasVersion  \"1.0\";\n        schema:description  \"Este arquivo informa a vers\u00e3o do POD do usu\u00e1rio\".\n</code></pre> <p>Fields Description</p> <ul> <li> <p>dcterms:date - Last modified date</p> </li> <li> <p>dcterms:hasVersion - Data structure version</p> </li> <li> <p>schema:description - File description</p> </li> </ul>"},{"location":"Solid/#artifacts-indexttl","title":".artifacts-index.ttl","text":"<p>File Location</p> <p>/KarreraAI/artifacts/ <p>Description</p> <p>This file is used to store the list of artifacts uploaded to users's pod. This artifacts can be uploaded by the user itself or by the application backoffice agents. It includes some informations from each artifact that will be described later in this documet.</p> <p>File Structure</p> .artifacts-index.ttl<pre><code>PREFIX dcterms: &lt;http://purl.org/dc/terms/&gt;\nPREFIX esco:    &lt;http://data.europa.eu/esco/model#&gt;\nPREFIX schema:  &lt;https://schema.org/&gt;\nPREFIX skos:    &lt;http://www.w3.org/2004/02/skos/core#&gt;\nPREFIX xsd:     &lt;http://www.w3.org/2001/XMLSchema#&gt;\n\n&lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/artifacts/.artifacts-index.ttl&gt;\n    a schema:ItemList;\n    schema:itemListElement  [\n                            a schema:DigitalDocument;\n                            schema:encodingFormat     \"application/pdf\";\n                            schema:datePublished      \"YYYY-MM-YYThhmmssZ\"^^xsd:dateTime;\n                            schema:description        \"File Description\";\n                            schema:genre              \"Tipo do arquivo\";\n                            schema:name               \"File Name\";\n                            schema:archivedAt         &lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/artifacts/CV.pdf&gt;;\n                            schema:url                &lt;File URL&gt;;\n                            schema:creativeWorkStatus \"Processed\";\n                            schema:subjectOf    [\n                                                a schema:Event;\n                                                schema:name \"Upload event\"\n                                                ]\n                            ] .\n</code></pre> <p>Fields Description</p> <ul> <li>schema:encodingFormat - File encoding format</li> <li>schema:datePublished - Date and Time when the file was uploaded (Format: YYYY-MM-YYThhmmssZ) </li> <li>schema:description - File description</li> <li>schema:genre - The genre of the file. It is used to define the category of the file. It can be one of the following options:<ul> <li>CV</li> <li>Scrape</li> <li>Personal Document</li> <li>Project Document</li> </ul> </li> <li>schema:name - Artifact name</li> <li>schema:archivedAt - Folder where the file is stored at users's POD</li> <li>schema:url - URL from where the file was downloaded</li> <li>schema:creativeWorkStatus - File processment status. It can be one of the following options:<ul> <li>Processed</li> <li>Pending</li> </ul> </li> <li>schema:subjectOf<ul> <li>schema:name - Name of the process that generated that file. It can be one of the following options:<ul> <li>Uploaded by user</li> <li>Scrape from WEB</li> <li>Upload during first login</li> </ul> </li> </ul> </li> </ul>"},{"location":"Solid/#narrative-indexttl","title":".narrative-index.ttl","text":"<p>File Location</p> <p>/KarreraAI/narrative/ <p>Description</p> <p>This file stores a list o narratives for the user. Each narrative is a collection of memories. Each entry describes the nature of the narratives, its purpose, and the memory targets it contains.</p> <p>File Structure</p> .narrative-index.ttl<pre><code>@prefix dcterms: &lt;http://purl.org/dc/terms/&gt; .\n@prefix esco:    &lt;http://data.europa.eu/esco/model#&gt; .\n@prefix schema:  &lt;https://schema.org/&gt; .\n@prefix skos:    &lt;http://www.w3.org/2004/02/skos/core#&gt; .\n@prefix xsd:     &lt;http://www.w3.org/2001/XMLSchema#&gt; .\n\n&lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/narrative/.narrative-index.ttl&gt;\n        a schema:ItemList;\n        schema:itemListElement  &lt;#f8feeb3c-0a1f-4222-873e-e216a5978eb3&gt; .    \n\n&lt;#f8feeb3c-0a1f-4222-873e-e216a5978eb3&gt; \n    a schema:action ;\n    schema:name         \"Narrative name\" ;\n    schema:description  \"Narrative description\" ;\n    schema:target       &lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/narrative/memory/2025/04/.memory-working-index.ttl#4c5cc5d2-63fe-4554-a17f-b68403573f43&gt; ,\n                        &lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/narrative/memory/2025/04/.memory-longterm-index.ttl#79a65b9a-7bd2-4605-ac8e-6a89d8ff720a&gt; ,\n                        &lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/narrative/memory/2025/04/.memory-discarded-index.ttl#daaefefd-442c-44fb-a616-5a8a82ca505c&gt; ;\n    schema:endTime      \"YYYY-MM-DDThhmmssZ\"^^xsd:dateTime .\n</code></pre> <p>Fields Description</p> <ul> <li>schema:name - Narrative name</li> <li>schema:description - Description of the narrative and its purpose</li> <li>schema:target - References to memories included in this narrative</li> <li>schema:endTime - Timestamp indicating when the action was completed (Format: YYYY-MM-DDThhmmssZ)</li> </ul>"},{"location":"Solid/#item-indexttl","title":".item-index.ttl","text":"<p>File Location</p> <p>/KarreraAI/narrative/item/ <p>Description</p> <p>This file stores a list o items of memories generated for the user. Each entry represents the results of a specific memory process extraction including its status, result location, and completion timestamp. These items are part of a memory that will be described in another topic.</p> <p>File Structure</p> .item-index.ttl<pre><code>@prefix dcterms: &lt;http://purl.org/dc/terms/&gt; .\n@prefix esco:    &lt;http://data.europa.eu/esco/model#&gt; .\n@prefix schema:  &lt;https://schema.org/&gt; .\n@prefix skos:    &lt;http://www.w3.org/2004/02/skos/core#&gt; .\n@prefix xsd:     &lt;http://www.w3.org/2001/XMLSchema#&gt; .\n\n&lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/narrative/item/.item-index.ttl&gt;\n    a schema:ItemList;\n    schema:itemListElement  [ \n                            a schema:action ;\n                            schema:endTime  \"YYYY-MM-DDThhmmssZ\"^^xsd:dateTime ;\n                            schema:result   &lt;/a7bcfbf7-92bd-4cbe-96e9-2ee737970e26/KarreraAI/narrative/item/pending/11c741e6-3f7c-4919-9334-8d3118ae6bec.ttl&gt; ;\n                            schema:object   \"The process that generate this item\" ;\n                            schema:status   \"Item status\"                                 \n                            ] .\n</code></pre> <p>Fields Description</p> <ul> <li>schema:endTime - Timestamp indicating when the process was completed (Format: YYYY-MM-DDThhmmssZ)</li> <li>schema:result - Link to the resulting item generated by the process</li> <li>schema:object - Name of the process that generated this item. It can be one of the following:<ul> <li>CV Extraction</li> <li>Scrape WEB</li> </ul> </li> <li>schema:status - Item processment status. It can be one of the following options:<ul> <li>Working</li> <li>Long Term</li> <li>Discarded</li> </ul> </li> </ul>"},{"location":"admonitions/","title":"Admonitions","text":"<p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Collapsible callout:</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"code-examples/","title":"Code examples","text":"<p>An example of a codeblock for python:</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>An example of a codeblock for javascript:</p> code-examples.js<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>"},{"location":"content-tab/","title":"Content tab","text":""},{"location":"content-tab/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of content tabs.</p>"},{"location":"content-tab/#generic-content","title":"Generic Content","text":"Plain textUnordered listOrdered listPythonJavaScript <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol> <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre>"},{"location":"diagram-examples/","title":"Diagram Examples","text":""},{"location":"diagram-examples/#flowcharts","title":"Flowcharts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre>"},{"location":"diagram-examples/#sequence-diagrams","title":"Sequence Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre>"},{"location":"gateway/","title":"API Gateway Setup","text":"<p>This document explains the setup of the API Gateway for the project Karrera - Personal AI project using Google Cloud API Gateway. The backend services are hosted on Google Compute Engine (VM), and the API is defined using OpenAPI 2.0. It explains how to use Google Cloud's fully managed API Gateway to securely expose an application running on a Compute Engine Virtual Machine (VM). This approach is ideal for centralizing API access, providing API key enforcement, and decoupling clients from your backend VM's network details, all without managing gateway infrastructure yourself.</p>"},{"location":"gateway/#overview-managed-api-gateways-for-vm-backends","title":"Overview: Managed API Gateways for VM backends","text":"<p>Google's API Gateway acts as a single entry point for all API calls, sitting in front of your backend services. When your backend is a Compute Engine VM, the API Gateway provides a managed layer that handles:</p> <ul> <li>Traffic Management: Routes incoming requests to your VM application.</li> <li>Security: Enforces API keys, providing a crucial layer of access control before requests even reach your VM.</li> <li>Decoupling: Hides the VM's internal IP address and specific network configuration from external clients.</li> <li>Observability: Integrates seamlessly with Cloud Monitoring and Cloud Logging for request tracing and performance insights.</li> <li>Scalability: The gateway itself is a serverless service, automatically scaling to handle traffic.</li> </ul> <p>This setup simplifies operations compared to running a custom gateway (self-managed) on a VM, as Google manages the gateway infrastructure, patching, and scaling.</p>"},{"location":"gateway/#architecture","title":"Architecture","text":"<p>In this architecture, the Google Cloud API Gateway acts as a proxy for your application running on a Compute Engine VM.</p> <ul> <li>Client: Makes requests to the public URL provided by the API Gateway.</li> <li>GCP API Gateway: <ul> <li>Receives external API requests.</li> <li>Enforces configured security policies (e.g., API key validation).</li> <li>Routes validated requests to your Compute Engine VM using its internal IP address.</li> <li>Handles response forwarding back to the client.</li> </ul> </li> <li>Backend: Flask API running on a Google Cloud VM<ul> <li>Hosts your API application (e.g., a web server, microservice).</li> <li>Listens for incoming requests on a specific port, typically on its internal IP address.</li> <li>Does not require an external IP address for direct client access, as all traffic is routed through the API Gateway.</li> </ul> </li> </ul> <pre><code>graph LR\n    subgraph External Clients\n        A[External Users/Applications]\n    end\n\n    subgraph API Gateway Layer\n        B[Google Cloud API Gateway]\n    end\n\n    subgraph Compute Engine VM/Backend Services\n        direction LR\n        C1[User Session Init]\n        C2[Search From Web ]\n        C3[CV Reader]\n    end\n\n    A -- HTTPS Requests --&gt; B\n\n    B -- Internal HTTP/S Requests --&gt; C1\n    B -- Internal HTTP/S Requests --&gt; C2\n    B -- Internal HTTP/S Requests --&gt; C3\n\n    style B fill:#3F704D,stroke:#39a0b9,stroke-width:2px,font-color:#000000\n    style C1 fill:#708238,stroke:#a039b9,stroke-width:2px,font-color:#000000\n    style C2 fill:#708238,stroke:#a039b9,stroke-width:2px,font-color:#000000\n    style C3 fill:#708238,stroke:#a039b9,stroke-width:2px,font-color:#000000\n</code></pre>"},{"location":"gateway/#implementation-steps","title":"Implementation Steps:","text":""},{"location":"gateway/#step-1-check-for-appropriate-permissions-in-gcp-recommended-iam-roles-and-best-practices","title":"Step 1: Check for appropriate permissions in GCP (Recommended IAM Roles and Best Practices):","text":"<p>Since we are running a VM on GCP, and working using this cloud, we firstly have to make sure we have the appropriate permissions to create and work on the API Gateway in Google Cloud, including the configuration of API key enforcement.</p> <p>Principle of Least Privilege: When assigning permissions, it's a security best practice to follow the Principle of Least Privilege (POLP). This means granting only the minimum permissions necessary for a task, rather than broad roles like \"Owner\" or \"Editor,\" which provide excessive access and increase security risks.</p>"},{"location":"gateway/#recommended-predefined-iam-roles","title":"Recommended Predefined IAM Roles","text":"<p>For a user or service account involved in creating, deploying, and managing an API Gateway with API key enforcement, the following roles are a good starting point:</p> <ol> <li> <p>API Gateway Admin (<code>roles/apigateway.admin</code>)</p> <ul> <li>Why it's used: This role grants comprehensive permissions for managing API Gateway resources directly. It allows the creation, updating, retrieval, and deletion of API definitions, API configurations (derived from your OpenAPI spec), and the API Gateway instances themselves.</li> <li>How it's used: Essential for the core operations of setting up and modifying your API Gateway, such as deploying new OpenAPI configurations or updating gateway settings.</li> </ul> </li> <li> <p>Service Management Administrator (<code>roles/servicemanagement.admin</code>)</p> <ul> <li>Why it's used: API Gateway relies on Google Cloud's Service Management infrastructure. When you deploy an API Gateway configuration, a \"managed service\" is created (e.g., <code>your-api.apigateway.your-project.cloud.goog</code>). This role provides the necessary permissions to create and manage these underlying services. This is often the critical role when encountering \"address not enabled for the project\" errors.</li> <li>How it's used: Enables the API Gateway to register its service in Service Management, making it discoverable and manageable within your project.</li> </ul> </li> <li> <p>Service Usage Admin (<code>roles/serviceusage.admin</code>)</p> <ul> <li>Why it's used: This role allows users to enable and disable Google Cloud APIs and services within a project. It's crucial for ensuring that necessary APIs (like the API Gateway API itself) are active for your project.</li> <li>How it's used: Used to enable the core <code>API Gateway API</code> (<code>apigateway.googleapis.com</code>) and other Google APIs that your backend services might rely on.</li> </ul> </li> <li> <p>API Keys Admin (<code>roles/serviceusage.apiKeysAdmin</code>)</p> <ul> <li>Why it's used: This role provides permissions for managing API keys, including creating, listing, updating, and deleting them. It's essential for generating and restricting the API keys that your clients will use to authenticate with your API Gateway.</li> <li>How it's used: Necessary for creating the API key in the Google Cloud Console and, crucially, for restricting it to your specific API Gateway service, ensuring it's only valid for your API.</li> </ul> </li> <li> <p>Compute Network Viewer (<code>roles/compute.networkViewer</code>) or Compute Network User (<code>roles/compute.networkUser</code>)</p> <ul> <li>Why it's used:  While API Gateway itself doesn't need to manage VM instances, the user deploying the gateway might need to view or interact with network resources (like internal IPs, firewall rules) to correctly configure the <code>x-google-backend.address</code> and ensure network connectivity.</li> <li>How it's used: To retrieve the VM's internal IP and verify firewall configurations.</li> </ul> </li> </ol>"},{"location":"gateway/#important-considerations","title":"Important Considerations","text":"<ul> <li> <p>Service Accounts for Automation:</p> <ul> <li>Always use a dedicated service account instead of a user account.</li> <li>Grant this service account only the specific roles listed above. This minimizes the blast radius of any potential security breaches.</li> </ul> </li> <li> <p>Enabling Necessary APIs:</p> <ul> <li>Before deploying your API Gateway, ensure that the core Google Cloud APIs it relies on are enabled in your project.</li> <li>Key APIs to enable:<ul> <li>API Gateway API (<code>apigateway.googleapis.com</code>)</li> <li> <p>The specific API Gateway created -- after its creation: When you deploy an API configuration to API Gateway, Google Cloud automatically creates a unique \"managed service\" in the background that represents your API. This service needs to be explicitly enabled in your project before the API Gateway can properly serve traffic and enforce API key restrictions. If this service is not enabled, you might encounter <code>PERMISSION_DENIED</code> errors, indicating that the API targeted by the request is not enabled for the project.</p> <p>Here's how to enable it:</p> <ol> <li> <p>Identify The Managed Service Name:</p> <ul> <li>During the API Config creation step (e.g., Step 3.2 in the full deployment guide), you should have noted down the \"Managed Service\" name. It typically follows this pattern: <code>YOUR_API_ID.apigateway.YOUR_PROJECT_ID.cloud.goog</code>.</li> <li>If you don't have it, you can find it by navigating to API Gateway &gt; APIs in the Google Cloud Console, selecting your API, and looking for the \"Managed Service\" column or property in the API details.</li> </ul> </li> <li> <p>Enable the Service via API Library:</p> <ul> <li>In the Google Cloud Console, go to APIs &amp; Services &gt; Library.</li> <li>In the search bar provided, paste or type the exact Managed Service name you identified in the previous step (e.g., <code>my-api-12345.apigateway.my-project.cloud.goog</code>).</li> <li>The search results should display your API's managed service. Click on it.</li> <li>On the service's details page, click the ENABLE button.</li> </ul> </li> </ol> <p>Once enabled, allow a few moments for the changes to propagate throughout Google Cloud's infrastructure. After this, your API Gateway should be ready to correctly route requests and enforce its configured security policies.</p> </li> </ul> </li> </ul> </li> <li> <p>API Key Restrictions (Crucial Security Practice):</p> <ul> <li>After creating an API key in Google Cloud, it is imperative to restrict it.</li> <li>How to restrict:<ol> <li>Go to APIs &amp; Services &gt; Credentials in the Google Cloud Console.</li> <li>Edit your API key.</li> <li>Under \"API restrictions,\" choose \"Restrict key.\"</li> <li>Select your specific API Gateway service (e.g., <code>YOUR_API_NAME.apigateway.YOUR_PROJECT_ID.cloud.goog</code>) from the dropdown.</li> <li>Additionally, you might want to restrict it to other relevant Google APIs like <code>API Gateway API</code> and <code>Service Control API</code>.</li> </ol> </li> <li>Why it's important: Restricting API keys ensures they can only be used to access the specific services you intend, preventing unauthorized access to other resources in your project if the key is compromised.</li> </ul> </li> </ul>"},{"location":"gateway/#step-2-define-api-specification","title":"Step 2: Define API Specification","text":"<ul> <li>Purpose:  Create an OpenAPI (Swagger 2.0) specification file (e.g., api-gateway-spec.yaml) that describes your API and tells the API Gateway how to route requests to your VM backend.</li> <li> <p>Activities:</p> <ol> <li>Define the basic info:<ul> <li>Standard: Swagger/OPEN API 2.0</li> <li>Title, Description, and Version of Configuration</li> </ul> </li> <li>Define all endpoints, methods, and expected behaviors</li> <li>Document request/response formats using OpenAPI 2.0 standards</li> <li>Specify path parameters, query strings, and body schemas</li> <li>Map API services to backend services, and define the timeout limit (600s)</li> <li>Add security scheme definitions (API keys for now)</li> </ol> </li> <li> <p>Key elements for a VM backend:</p> <ul> <li><code>x-google-backend.address</code>: This is the most crucial part. It must point to the internal IP address and port of your Compute Engine VM.</li> <li><code>securityDefinitions</code> and <code>security</code>: For API Key enforcement.</li> </ul> </li> <li> <p>Output: Here's a small version of the OpenAPI spec used:</p> </li> </ul> api-gateway-spec.yaml<pre><code># Basic information\nswagger: \"2.0\"\ninfo:\n  title: \"API Gateway Configuration Test\"\n  description: \"Test of Gateway\"\n  version: 1.0.0\n\n# Enforce API Key security\nsecurityDefinitions:\n  api_key:\n    type: \"apiKey\"\n    name: \"x-api-key\"\n    in: \"header\"\n\n# Require the api_key security scheme (defined above) for all paths and methods unless overridden.\nsecurity:\n- api_key: []\n\n# Sinece most of the methods consume and produce json texts, define a basic expected behavior (can be overriden)\nconsumes:\n  - application/json\nproduces:\n  - application/json\n\n# Define the backend address\nx-google-backend:\n  address: http://&lt;YOUR_VM_INTERNAL_IP&gt;:&lt;YOUR_APP_PORT&gt; \n  deadline: 600.0 ## the timeout limit, in seconds\n\n# Define each endpoint under paths\npaths:\n   # Endpoint name\n  /user_session_init:\n    # Endpoint request type\n    post:\n      # Write the basic information of this microsservice\n      operationId: userSessionInit\n      summary: Initializes a user session in Redis\n      description: Initializes a user session in Redis using the `name` and `user-id` from request headers.\n\n      # Write down what parameters the method takes\n      parameters:\n        - in: header # Where the parameter goes in the request\n          name: name # Name of the key\n          type: string # Type of the parameter\n          required: true # If it is required or not\n        - in: header\n          name: user-id\n          type: string\n          required: true\n\n      # Define Responses (required, but since we have already defined responses in our methods, not really necessary -- we can specify it later)\n      responses:\n        200:\n          description: OK\n</code></pre> <p>[!IMPORTANT]  Replace  and  with the Karrera VM's internal IP and the port."},{"location":"gateway/#step-3-create-and-deploy-the-api-gateway","title":"Step 3: Create and Deploy the API Gateway","text":"<ol> <li>Enable API Gateway API:<ul> <li>Go to APIs &amp; Services &gt; Library in the GCP Console.</li> <li>Search for \"API Gateway API\" and ensure it's enabled.</li> </ul> </li> <li>Create API Config:<ul> <li>In the GCP Console, navigate to API Gateway &gt; APIs.</li> <li>Click CREATE API.</li> <li>Give your API a display name (e.g., <code>vm-backend-api</code>).</li> <li>Click BROWSE under \"API spec\" and upload your <code>api-gateway-spec.yaml</code>file.</li> <li>Click CONTINUE.</li> <li>Take note of the \"Managed Service\" name (e.g., <code>my-api-12345.apigateway.my-project.cloud.goog</code>). This is important for API key restrictions.</li> <li>Click CREATE API CONFIG.</li> </ul> </li> <li>Create Gateway:<ul> <li>Once the API Config is created, navigate to API Gateway &gt; Gateways.</li> <li>Click CREATE GATEWAY.</li> <li>Gateway name: Choose a unique name (e.g., <code>my-vm-gateway</code>).</li> <li>Region: Select a region. Ideally, one close to your VM to minimize latency.</li> <li>API: Select the API you just created (e.g., vm-backend-api).</li> <li>API config: Select the API config you just created.</li> <li>Click CREATE GATEWAY.</li> <li>Wait for the gateway to deploy. Once complete, you'll see a default URL for your gateway (e.g., <code>https://my-vm-gateway-abc12def.ts.gateway.cloud.goog</code>).</li> </ul> </li> </ol>"},{"location":"gateway/#step-4-api-key-management","title":"Step 4: API Key Management","text":"<p>API Keys provide a simple yet effective mechanism for controlling access to your API Gateway. Proper management and restriction of these keys are vital for security.</p> <ol> <li> <p>Create an API Key:</p> <ul> <li>Navigate to the Google Cloud Console.</li> <li>Go to APIs &amp; Services &gt; Credentials.</li> <li>Click on CREATE CREDENTIALS &gt; API Key.</li> <li>A new API key string will be automatically generated. Copy this key immediately as you will need it for testing and client applications.</li> </ul> </li> <li> <p>Restrict the API Key (Crucial for Security):     Once created, an API key is by default unrestricted, meaning it could potentially be used to access any enabled API in your project. This is a significant security risk. The API key must be restricted to only allow access to the specific API Gateway.</p> <ul> <li>On the same Credentials page, locate the newly created API key.</li> <li>Click the EDIT API KEY icon (pencil) next to it.</li> <li>Under the API restrictions section, select the Restrict key radio button.</li> <li>From the \"Select APIs\" dropdown menu, select the following APIs:<ul> <li><code>API Gateway API</code> (<code>apigateway.googleapis.com</code>)</li> <li>Your specific Managed Service name (e.g., <code>my-api-12345.apigateway.my-project.cloud.goog</code>). You would have obtained this name during the API Config creation step (typically Step 3.2 in the full deployment guide).</li> </ul> </li> <li>Click OK to confirm your selections.</li> <li>Finally, click SAVE at the bottom of the page to apply the restrictions.</li> </ul> </li> </ol>"},{"location":"gateway/#step-5-testing-your-api-gateway","title":"Step 5: Testing Your API Gateway","text":"<p>Thorough testing is essential to confirm that your API Gateway is correctly configured, routing traffic, and enforcing API key security.</p> <ol> <li> <p>Test with API Key (Expected Success):     This test verifies that your API Gateway accepts valid API keys and successfully routes requests to your backend application.</p> <ul> <li>Open an API client like Postman, curl, or any preferred tool.</li> <li>Construct a request to your API Gateway's public URL. The URL format will be <code>https://&lt;YOUR_GATEWAY_URL&gt;/&lt;YOUR_API_PATH&gt;</code> (e.g., <code>https://my-vm-gateway-abc12def.ts.gateway.cloud.goog/my-app-endpoint</code>).</li> <li>Include a header: Add an <code>X-API-Key</code> header with the API key you copied from Step 4.1.     <pre><code>X-API-Key: &lt;YOUR_API_KEY&gt;\n</code></pre>     (Replace <code>&lt;YOUR_API_KEY&gt;</code> with your actual generated key.)</li> <li>Send the request.</li> <li>Expected Outcome: You should receive a successful HTTP <code>200 OK</code> response (or whatever success code your backend application returns) from your VM application, indicating the request was processed correctly.</li> </ul> </li> <li> <p>Test without API Key (Expected Failure):     This test confirms that your API Gateway's API key enforcement is active and blocking unauthorized access.</p> <ul> <li>Make the same request to your API Gateway URL as in the previous test.</li> <li>Crucially, do NOT include the <code>X-API-Key</code> header in this request.</li> <li>Send the request.</li> <li>Expected Outcome: You should receive an HTTP <code>401 Unauthorized</code> or <code>403 Forbidden</code> response. This indicates that the API Gateway successfully detected the missing API key and blocked the unauthorized request, confirming your security measures are working.</li> </ul> </li> </ol>"},{"location":"gateway/#step-6-monitoring-and-logging","title":"Step 6: Monitoring and Logging","text":"<p>Google Cloud API Gateway is deeply integrated with Cloud Logging and Cloud Monitoring, providing out-of-the-box observability for your API traffic and performance.</p> <ol> <li> <p>Cloud Logging (For Request Details and Errors):     Cloud Logging captures detailed logs for every request handled by your API Gateway, providing insights into traffic flow, latency, and any issues encountered.</p> <ul> <li>In the Google Cloud Console, navigate to Logging &gt; Logs Explorer.</li> <li>In the \"Resource\" filter, select <code>API Gateway Gateway</code>.</li> <li>You will see log entries for each request, including:<ul> <li>HTTP status codes (e.g., 200, 401, 500)</li> <li>Request latency</li> <li>Source IP addresses</li> <li>Details on backend communication</li> <li>Error messages (if any)</li> </ul> </li> <li>You can use the query builder to filter logs by <code>method</code>, <code>status</code>, <code>request_id</code>, and other parameters to troubleshoot specific issues.</li> </ul> </li> <li> <p>Cloud Monitoring (For Metrics and Performance):     Cloud Monitoring allows you to observe the performance and health of your API Gateway over time through various metrics.</p> <ul> <li>In the Google Cloud Console, go to Monitoring &gt; Metrics Explorer.</li> <li>In the \"Metric\" selector, search for \"API Gateway\" metrics. Key metrics to monitor include:<ul> <li><code>gateway/request_count</code>: Total number of requests received.</li> <li><code>gateway/error_count</code>: Number of requests resulting in errors.</li> <li><code>gateway/request_latencies</code>: Distribution of request latencies (useful for P50, P90, P99 analysis).</li> <li><code>gateway/consumed_bytes_count</code> / <code>gateway/produced_bytes_count</code>: Data transfer.</li> </ul> </li> <li>You can create custom dashboards to visualize these metrics tailored to your needs.</li> <li>Set up alerts based on thresholds (e.g., alert if error rate exceeds X% or latency goes above Y ms) to be proactively notified of potential issues.</li> </ul> </li> </ol>"},{"location":"load-balancer/","title":"Load Balancer Setup","text":"<p>This document explains the setup of the GCP Load Balancer for all backend microservices managed by API Gateway, unifying all backend components into the same DNS(dev.karrera.ai/BackendServicePath).</p>"},{"location":"load-balancer/#overview-creating-dns-for-api-gateway","title":"Overview: Creating DNS for API Gateway","text":"<p>A load balancer is not required for API Gateway to function, it does allow your gateway to take advantage of the benefits of a load balancer. For example, using a global external Application Load Balancer with API Gateway lets you:</p> <ul> <li>Use custom domains.</li> <li>Leverage Google Cloud Armor as a network security service.</li> <li>Manage efficient load balancing across gateways in multiple locations.</li> <li>Implement advanced traffic management.</li> </ul> <p>What we need here is to set a custom domain for our backend microservices managed by API Gateway.</p> <p>The whole flow can be illustrated as image below:</p> <p></p>"},{"location":"load-balancer/#implementation-steps","title":"Implementation Steps:","text":""},{"location":"load-balancer/#step-1-create-serverless-neg-for-api-gateway","title":"Step 1: Create serverless NEG for API-Gateway","text":"<p><pre><code>gcloud beta compute network-endpoint-groups create SERVERLESS_NEG_NAME \\\n  --region=REGION_ID \\\n  --network-endpoint-type=serverless \\\n  --serverless-deployment-platform=apigateway.googleapis.com \\\n  --serverless-deployment-resource=GATEWAY_ID\n</code></pre> For example: <pre><code>gcloud beta compute network-endpoint-groups create karrera-dev-neg \\\n  --region=us-central1 \\\n  --network-endpoint-type=serverless \\\n  --serverless-deployment-platform=apigateway.googleapis.com \\\n  --serverless-deployment-resource=gateway-karrera-backend\n</code></pre></p>"},{"location":"load-balancer/#step-2-create-a-backend-service-to-define-how-the-global-external-application-load-balancer-distributes-traffic","title":"Step 2: Create a backend service to define how the global external Application Load Balancer distributes traffic","text":"<p>To create a backend service <pre><code>gcloud compute backend-services create BACKEND_SERVICE_NAME --global\n</code></pre></p> <p>To add your serverless NEG as a backend to the backend service, run the following command <pre><code>gcloud compute backend-services add-backend BACKEND_SERVICE_NAME \\\n  --global \\\n  --network-endpoint-group=SERVERLESS_NEG_NAME \\\n  --network-endpoint-group-region=REGION_ID\n</code></pre></p>"},{"location":"load-balancer/#step-3-create-a-url-map-to-route-incoming-requests-to-the-backend-service","title":"Step 3: Create a URL map to route incoming requests to the backend service","text":"<p>To create the URL map, run the following command <pre><code>gcloud compute url-maps create URL_MAP_NAME \\\n  --default-service BACKEND_SERVICE_NAME\n</code></pre></p> <p>Or create it directly from console: </p>"},{"location":"load-balancer/#step-4-create-an-ssl-certificate-for-your-target-proxy","title":"Step 4: Create an SSL certificate for your target proxy","text":"<p>To create a self-managed SSL certificate resource: <pre><code>gcloud compute ssl-certificates create SSL_CERTIFICATE_NAME \\\n  --certificate CRT_FILE_PATH \\\n  --private-key KEY_FILE_PATH\n</code></pre></p> <p>Or create it directly from console, in Load Balancer's Frontend configuration: </p>"},{"location":"load-balancer/#step-5-create-a-target-https-proxy-to-route-requests-to-your-url-map","title":"Step 5: Create a target HTTP(S) proxy to route requests to your URL map","text":"<p>To create the target proxy, use the following command: <pre><code>gcloud compute ssl-certificates create gcloud compute target-https-proxies create TARGET_HTTPS_PROXY_NAME \\\n  --ssl-certificates=SSL_CERT_NAME \\\n  --url-map=URL_MAP_NAME\n</code></pre></p>"},{"location":"load-balancer/#step-6-create-a-forwarding-rule-to-route-incoming-requests-to-the-proxy","title":"Step 6: Create a forwarding rule to route incoming requests to the proxy","text":"<p>Use the following command to create the forwarding rule: <pre><code>gcloud compute forwarding-rules create HTTPS_FORWARDING_RULE_NAME \\\n  --target-https-proxy=TARGET_HTTPS_PROXY_NAME \\\n  --global \\\n  --ports=443\n</code></pre></p>"},{"location":"load-balancer/#step-7-update-dns-records-with-load-balancer-ip-address","title":"Step 7: Update DNS records with load balancer IP address","text":""},{"location":"load-balancer/#creating-multiple-backend-services-for-lb","title":"Creating multiple backend services for LB","text":"<p>Repeat step 1 and 2 for new backend service, and update the URL Map path rules.</p>"},{"location":"memory-system-api/","title":"Memory System API Documentation","text":""},{"location":"memory-system-api/#overview","title":"Overview","text":"<p>The Memory System is designed to manage user memory entries generated by the AI. It enables the creation, listing, and management of narratives, memories, and items that summarize changes to a user's PI (Personal Information) file. The system supports two main types of agents:</p> <ul> <li>End User: Interacts with the system using a valid <code>session-id</code> (Solid session), can view and update the status of memories (approve/discard).</li> <li>Automated AI Agent: Uses an API key to create new narratives and memories based on AI output, operating with a service account to access user pods even when users are not logged in.</li> </ul> <p>All API details, including request/response schemas and examples, are available in the (Swagger UI)[https://solid-dev.karrera.ai/api-docs/].</p>"},{"location":"memory-system-api/#high-level-logic","title":"High-Level Logic","text":"<ol> <li>Narrative Creation: Narratives are created by the AI agent and contain a list of memories. Each memory contains a list of items representing changes to the user's PI file.</li> <li>Memory Review: Users can view their narratives and the contained memories. For each memory, the user can approve or discard it.</li> <li>Memory Status Update: Approved memories apply their changes to the PI file and are moved to a long-term archive folder based on the date. Discarded memories are moved to a discarded folder.</li> </ol>"},{"location":"memory-system-api/#api-endpoints","title":"API Endpoints","text":""},{"location":"memory-system-api/#end-user-endpoints-memory","title":"End User Endpoints (<code>/memory/*</code>)","text":"<p>These endpoints require a valid <code>session-id</code> header and allow users to:</p> <ul> <li>List Narratives: View all narratives associated with the user.</li> <li>Get Memory Details: Retrieve details about a specific memory.</li> <li>Get Item Details: Retrieve details about a specific item within a memory.</li> <li>Change Memory Status: Approve or discard a memory, triggering the application or rejection of its changes.</li> </ul> <p>See the (Swagger UI)[https://solid-dev.karrera.ai/api-docs/] for full endpoint details and usage.</p>"},{"location":"memory-system-api/#ai-agentinternal-endpoints-internal","title":"AI Agent/Internal Endpoints (<code>/internal/*</code>)","text":"<p>These endpoints require a valid <code>x-api-key</code> header and are intended for automated agents:</p> <ul> <li>Create Narrative: Add a new narrative (with memories and items) to a user's pod.</li> <li>Create Artifacts: Add new artifacts to the internal storage.</li> <li>Update PI: Update the user's PI file with new information.</li> <li>Download File: Retrieve files from internal storage.</li> </ul> <p>See the (Swagger UI)[https://solid-dev.karrera.ai/api-docs/] for full endpoint details and usage.</p>"},{"location":"memory-system-api/#additional-notes","title":"Additional Notes","text":"<ul> <li>All endpoints are protected and require appropriate authentication (either <code>session-id</code> or <code>x-api-key</code>).</li> <li>The system is designed to work with Solid pods, ensuring user data privacy and control.</li> <li>For detailed request/response formats, error codes, and examples, refer to the (Swagger documentation)[https://solid-dev.karrera.ai/api-docs/]</li> </ul>"},{"location":"secret-manager/","title":"Secret Manager","text":""},{"location":"secret-manager/#python","title":"Python","text":"secret_manager.py<pre><code># Import the Secret Manager client library.\nfrom google.cloud import secretmanager\n\n# Name of the secret version.\nversion_name = \"SECRET_VERSION_NAME\"\n\n# Create the Secret Manager client.\nclient = secretmanager.SecretManagerServiceClient()\n\nresponse = client.access_secret_version(request={\"name\": version_name})\npayload = response.payload.data.decode(\"UTF-8\")\n\nreturn payload\n</code></pre>"},{"location":"secret-manager/#javascript","title":"Javascript","text":"secret_manager.js<pre><code>// Import the Secret Manager client and instantiate it:\nconst {SecretManagerServiceClient} = require('@google-cloud/secret-manager');\nconst client = new SecretManagerServiceClient();\n\nconst verionName = \"VERSION_NAME\"\n\nasync function AccessSecret() {\n    // Access the secret.\n  const [accessResponse] = await client.accessSecretVersion({\n    name: verionName,\n  });\n\n  const responsePayload = accessResponse.payload.data.toString('utf8');\n  console.info(`Payload: ${responsePayload}`);\n}\n\nAccessSecret();\n</code></pre>"},{"location":"secret-manager/#go","title":"Go","text":"secret_manager.js<pre><code>package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"log\"\n\n    secretmanager \"cloud.google.com/go/secretmanager/apiv1\"\n    \"cloud.google.com/go/secretmanager/apiv1/secretmanagerpb\"\n)\n\nfunc main() {\n    // Create the client.\n    ctx := context.Background()\n    client, err := secretmanager.NewClient(ctx)\n    if err != nil {\n        log.Fatalf(\"failed to setup client: %v\", err)\n    }\n    defer client.Close()\n\n    // Build the request.\n    accessRequest := &amp;secretmanagerpb.AccessSecretVersionRequest{\n        Name: version.Name,\n    }\n\n    // Call the API.\n    result, err := client.AccessSecretVersion(ctx, accessRequest)\n    if err != nil {\n        log.Fatalf(\"failed to access secret version: %v\", err)\n    }\n\n    log.Printf(\"Plaintext: %s\", result.Payload.Data)\n}\n</code></pre>"}]}